





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">

<meta content="origin" name="referrer" />

  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-bedfc518345498ab3204d330c1727cde7e733526a09cd7df6867f6a231565091.css" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-19574f5dd64fe4c630effa4b2dbf9be729ea3f209ab0268e72605af5c154651e.css" media="all" rel="stylesheet" />
  
  
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/site-877643c520258c4fa15ac8d1664d84efd0e3db56f5e544ccac58da0e50489904.css" media="all" rel="stylesheet" />
  

  <meta name="viewport" content="width=device-width">
  
  <title>List1.c · GitHub</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://gist.github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars0.githubusercontent.com/u/20489709?v=4&amp;s=400" property="og:image" /><meta content="Gist" property="og:site_name" /><meta content="object" property="og:type" /><meta content="List1.c" property="og:title" /><meta content="https://gist.github.com/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f" property="og:url" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  
  <meta name="pjax-timeout" content="1000">
  
  <meta name="request-id" content="96BE:2BEFD:20F94D:3494BD:59D4A4F3" data-pjax-transient>
  

  <meta name="selected-link" value="gist_code" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-4">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="gist" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="96BE:2BEFD:20F94D:3494BD:59D4A4F3" name="octolytics-dimension-request_id" /><meta content="iad" name="octolytics-dimension-region_edge" /><meta content="iad" name="octolytics-dimension-region_render" />
<meta content="/&lt;user-name&gt;/&lt;gist-id&gt;" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged Out">



    <meta content="false" name="octolytics-dimension-public" /><meta content="49194852" name="octolytics-dimension-gist_id" /><meta content="d81755abe14046e4f6cee70e0e41fb3f" name="octolytics-dimension-gist_name" /><meta content="false" name="octolytics-dimension-anonymous" /><meta content="20489709" name="octolytics-dimension-owner_id" /><meta content="I-Mircheva" name="octolytics-dimension-owner_login" /><meta content="false" name="octolytics-dimension-forked" />

  <meta class="js-ga-set" name="dimension5" content="secret">
  <meta class="js-ga-set" name="dimension6" content="owned">
  <meta class="js-ga-set" name="dimension7" content="c text">


      <meta name="hostname" content="gist.github.com">
  <meta name="user-login" content="">

      <meta name="expected-hostname" content="gist.github.com">
    <meta name="js-proxy-site-detection-payload" content="OGFjNWNlNjc1MWFiNGQzZjk5MzcyNmVhYzg3OTE0MTczNmJjZTdhZjUzZTRkMmU2Y2I5OGEyNTNjYWRmY2Q3OXx7InJlbW90ZV9hZGRyZXNzIjoiOTQuMTU1LjE5LjcxIiwicmVxdWVzdF9pZCI6Ijk2QkU6MkJFRkQ6MjBGOTREOjM0OTRCRDo1OUQ0QTRGMyIsInRpbWVzdGFtcCI6MTUwNzEwODA4NCwiaG9zdCI6ImdpdGh1Yi5jb20ifQ==">


  <meta name="html-safe-nonce" content="530438431ba58424a2ff7c3d25e7d5e2f719ecb2">

  <meta http-equiv="x-pjax-version" content="d982564bd4665692dae24a45c3321121">
  

      <link href="/I-Mircheva.atom" rel="alternate" title="atom" type="application/atom+xml">
  <meta content="noindex, follow" name="robots" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/gist-f0d67f3d7c0bd176fa6516aa440e609b7aaeeed2f027c8a6e001fa836eb0692f.css" media="all" rel="stylesheet" />




  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">



  </head>

  <body class="logged-out env-production">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        <div class="Header gist-header header-logged-out" role="banner">
  <div class="container-lg px-3 clearfix">
    <div class="d-flex flex-justify-between">
      <div class="d-flex">
        <a href="/" aria-label="Gist Homepage" class="header-logo-wordmark" data-hotkey="g d">
          <svg aria-hidden="true" class="octicon octicon-logo-github" height="28" version="1.1" viewBox="0 0 45 16" width="78"><path fill-rule="evenodd" d="M18.53 12.03h-.02c.009 0 .015.01.024.011h.006l-.01-.01zm.004.011c-.093.001-.327.05-.574.05-.78 0-1.05-.36-1.05-.83V8.13h1.59c.09 0 .16-.08.16-.19v-1.7c0-.09-.08-.17-.16-.17h-1.59V3.96c0-.08-.05-.13-.14-.13h-2.16c-.09 0-.14.05-.14.13v2.17s-1.09.27-1.16.28c-.08.02-.13.09-.13.17v1.36c0 .11.08.19.17.19h1.11v3.28c0 2.44 1.7 2.69 2.86 2.69.53 0 1.17-.17 1.27-.22.06-.02.09-.09.09-.16v-1.5a.177.177 0 0 0-.146-.18zm23.696-2.2c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25zm2.43-.16c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88zm-8.72-3.61H33.84c-.11 0-.17.08-.17.19v5.44s-.55.39-1.3.39-.97-.34-.97-1.09V6.25c0-.09-.08-.17-.17-.17h-2.14c-.09 0-.17.08-.17.17v5.11c0 2.2 1.23 2.75 2.92 2.75 1.39 0 2.52-.77 2.52-.77s.05.39.08.45c.02.05.09.09.16.09h1.34c.11 0 .17-.08.17-.17l.02-7.47c0-.09-.08-.17-.19-.17zm-23.7-.01h-2.13c-.09 0-.17.09-.17.2v7.34c0 .2.13.27.3.27h1.92c.2 0 .25-.09.25-.27V6.23c0-.09-.08-.17-.17-.17zm-1.05-3.38c-.77 0-1.38.61-1.38 1.38 0 .77.61 1.38 1.38 1.38.75 0 1.36-.61 1.36-1.38 0-.77-.61-1.38-1.36-1.38zm16.49-.25h-2.11c-.09 0-.17.08-.17.17v4.09h-3.31V2.6c0-.09-.08-.17-.17-.17h-2.13c-.09 0-.17.08-.17.17v11.11c0 .09.09.17.17.17h2.13c.09 0 .17-.08.17-.17V8.96h3.31l-.02 4.75c0 .09.08.17.17.17h2.13c.09 0 .17-.08.17-.17V2.6c0-.09-.08-.17-.17-.17zM8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17z"/></svg>
          <svg aria-hidden="true" class="octicon octicon-logo-gist" height="28" version="1.1" viewBox="0 0 25 16" width="40"><path fill-rule="evenodd" d="M4.7 8.73h2.45v4.02c-.55.27-1.64.34-2.53.34-2.56 0-3.47-2.2-3.47-5.05 0-2.85.91-5.06 3.48-5.06 1.28 0 2.06.23 3.28.73V2.66C7.27 2.33 6.25 2 4.63 2 1.13 2 0 4.69 0 8.03c0 3.34 1.11 6.03 4.63 6.03 1.64 0 2.81-.27 3.59-.64V7.73H4.7v1zm6.39 3.72V6.06h-1.05v6.28c0 1.25.58 1.72 1.72 1.72v-.89c-.48 0-.67-.16-.67-.7v-.02zm.25-8.72c0-.44-.33-.78-.78-.78s-.77.34-.77.78.33.78.77.78.78-.34.78-.78zm4.34 5.69c-1.5-.13-1.78-.48-1.78-1.17 0-.77.33-1.34 1.88-1.34 1.05 0 1.66.16 2.27.36v-.94c-.69-.3-1.52-.39-2.25-.39-2.2 0-2.92 1.2-2.92 2.31 0 1.08.47 1.88 2.73 2.08 1.55.13 1.77.63 1.77 1.34 0 .73-.44 1.42-2.06 1.42-1.11 0-1.86-.19-2.33-.36v.94c.5.2 1.58.39 2.33.39 2.38 0 3.14-1.2 3.14-2.41 0-1.28-.53-2.03-2.75-2.23h-.03zm8.58-2.47v-.86h-2.42v-2.5l-1.08.31v2.11l-1.56.44v.48h1.56v5c0 1.53 1.19 2.13 2.5 2.13.19 0 .52-.02.69-.05v-.89c-.19.03-.41.03-.61.03-.97 0-1.5-.39-1.5-1.34V6.94h2.42v.02-.01z"/></svg>
</a>
        <div class="site-search js-site-search" role="search">
            <div class="header-search" role="search">

<!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/search" class="position-relative js-quicksearch-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <label class="header-search-wrapper form-control js-chromeless-input-container">
    <input type="text"
      class="form-control js-site-search-focus header-search-input"
      data-hotkey="s"
      name="q"
      placeholder="Search…"
      tabindex="1"
      autocorrect="off"
      autocomplete="off"
      autocapitalize="off">
  </label>

</form></div>

        </div>

        <ul class="list-style-none d-flex flex-items-center text-bold pl-2" role="navigation">
          <li><a href="/discover" class="HeaderNavlink px-2" data-ga-click="Header, go to all gists, text:all gists">All gists</a></li>
          <li><a href="https://github.com" class="HeaderNavlink px-2" data-ga-click="Header, go to GitHub, text:GitHub">GitHub</a></li>
        </ul>
      </div>

        <div class="header-actions" role="navigation">
            <a href="/join?source=header-gist" class="btn btn-primary" data-ga-click="Header, sign up">Sign up for a GitHub account</a>
          <a href="https://gist.github.com/auth/github?return_to=https%3A%2F%2Fgist.github.com%2FI-Mircheva%2Fd81755abe14046e4f6cee70e0e41fb3f" class="btn" data-ga-click="Header, sign in">Sign in</a>
        </div>
    </div>
  </div>
</div>



  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
        <div itemscope itemtype="http://schema.org/Code">
    <div id="gist-pjax-container" class="gist-content-wrapper" data-pjax-container>
      


  <div class="gist-detail-intro gist-banner">
    <div class="container">
      <a href="/" class="btn btn-outline float-right">Create a gist now</a>
      <p class="lead">
        Instantly share code, notes, and snippets.
      </p>
    </div>
  </div>


<div class="gisthead pagehead repohead instapaper_ignore readability-menu experiment-repo-nav mb-4">
  <div class="container">
    
  
<div class="container repohead-details-container">

  <ul class="pagehead-actions">


    <li>
        <a href="/login?return_to=https%3A%2F%2Fgist.github.com%2FI-Mircheva%2Fd81755abe14046e4f6cee70e0e41fb3f" aria-label="You must be signed in to star a gist" class="btn btn-sm btn-with-count tooltipped tooltipped-n" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
    Star
</a>
  <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/stargazers" aria-label="0 users starred this gist" class="social-count">
    0
</a>
    </li>

      <li>
          <a href="/login?return_to=https%3A%2F%2Fgist.github.com%2FI-Mircheva%2Fd81755abe14046e4f6cee70e0e41fb3f" aria-label="You must be signed in to fork a gist" class="btn btn-sm btn-with-count tooltipped tooltipped-n" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
    Fork
</a>
  <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/forks" aria-label="0 users forked this gist" class="social-count">
    0
</a>
      </li>
  </ul>

  <h1 class="secret css-truncate">
    <img alt="@I-Mircheva" class="avatar gist-avatar" height="26" src="https://avatars0.githubusercontent.com/u/20489709?v=4&amp;s=52" width="26" />
    <span class="author"><a href="/I-Mircheva" class="url fn" rel="author"><span itemprop="author">I-Mircheva</span></a></span><!--
        --><span class="path-divider">/</span><!--
        --><strong itemprop="name" class="gist-header-title css-truncate-target"><a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f">List1.c</a></strong>
      <span class="Label Label--outline v-align-middle">Secret</span>

    <div class="d-block text-small text-gray">
      Created <time-ago datetime="2017-06-14T21:43:31Z">Jun 14, 2017</time-ago>
    </div>
  </h1>
</div>

<div class="container gist-file-navigation">
  <div class="float-right file-navigation-options" data-multiple>

    <div class="file-navigation-option">
  <input type="hidden" name="protocol_type" value="clone">

  <div class="select-menu js-menu-container js-select-menu">
    <div class="input-group js-select-button js-zeroclipboard-container">
      <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone Embed, location:repo overview" aria-expanded="false" aria-haspopup="true">
    Embed
  </button>
</div>
<input type="text" class="form-control input-monospace input-sm js-zeroclipboard-target js-url-field" value="&lt;script src=&quot;https://gist.github.com/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f.js&quot;&gt;&lt;/script&gt;" aria-label="Clone this repository at &lt;script src=&quot;https://gist.github.com/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f.js&quot;&gt;&lt;/script&gt;" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><svg aria-hidden="true" class="octicon octicon-clippy" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"/></svg></button>
</div>

    </div>

    <div class="select-menu-modal-holder">
      <div class="select-menu-modal js-menu-content">
        <div class="select-menu-header">
          <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
          <span class="select-menu-title">What would you like to do?</span>
        </div>

        <div class="select-menu-list js-navigation-container" role="menu">
            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <div class="select-menu-item-text">
                <input type="radio" name="protocol_selector" value="embed" checked>
                <span class="select-menu-item-heading">
                  
                  Embed
                </span>
                  <span class="description">
                    Embed this gist in your website.
                  </span>
                <span class="js-select-button-text hidden-select-button-text">
                  <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone Embed, location:repo overview" aria-expanded="false" aria-haspopup="true">
    Embed
  </button>
</div>
<input type="text" class="form-control input-monospace input-sm js-zeroclipboard-target js-url-field" value="&lt;script src=&quot;https://gist.github.com/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f.js&quot;&gt;&lt;/script&gt;" aria-label="Clone this repository at &lt;script src=&quot;https://gist.github.com/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f.js&quot;&gt;&lt;/script&gt;" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><svg aria-hidden="true" class="octicon octicon-clippy" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"/></svg></button>
</div>

                </span>
              </div>
            </div>
            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <div class="select-menu-item-text">
                <input type="radio" name="protocol_selector" value="share" >
                <span class="select-menu-item-heading">
                  
                  Share
                </span>
                  <span class="description">
                    Copy sharable URL for this gist.
                  </span>
                <span class="js-select-button-text hidden-select-button-text">
                  <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone Share, location:repo overview" aria-expanded="false" aria-haspopup="true">
    Share
  </button>
</div>
<input type="text" class="form-control input-monospace input-sm js-zeroclipboard-target js-url-field" value="https://gist.github.com/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f" aria-label="Clone this repository at https://gist.github.com/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><svg aria-hidden="true" class="octicon octicon-clippy" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"/></svg></button>
</div>

                </span>
              </div>
            </div>
            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <div class="select-menu-item-text">
                <input type="radio" name="protocol_selector" value="http" >
                <span class="select-menu-item-heading">
                  Clone via
                  HTTPS
                </span>
                  <span class="description">
                    Clone with Git or checkout with SVN using the repository's web address.
                  </span>
                <span class="js-select-button-text hidden-select-button-text">
                  <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone HTTPS, location:repo overview" aria-expanded="false" aria-haspopup="true">
    HTTPS
  </button>
</div>
<input type="text" class="form-control input-monospace input-sm js-zeroclipboard-target js-url-field" value="https://gist.github.com/d81755abe14046e4f6cee70e0e41fb3f.git" aria-label="Clone this repository at https://gist.github.com/d81755abe14046e4f6cee70e0e41fb3f.git" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><svg aria-hidden="true" class="octicon octicon-clippy" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"/></svg></button>
</div>

                </span>
              </div>
            </div>
        </div>
        <div class="select-menu-list" role="menu">
          <a class="select-menu-item select-menu-action" href="https://help.github.com/articles/which-remote-url-should-i-use" target="_blank">
            <svg aria-hidden="true" class="octicon octicon-question select-menu-item-icon" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M6 10h2v2H6v-2zm4-3.5C10 8.64 8 9 8 9H6c0-.55.45-1 1-1h.5c.28 0 .5-.22.5-.5v-1c0-.28-.22-.5-.5-.5h-1c-.28 0-.5.22-.5.5V7H4c0-1.5 1.5-3 3-3s3 1 3 2.5zM7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7z"/></svg>
            <div class="select-menu-item-text">
              Learn more about clone URLs
            </div>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>


    <div class="file-navigation-option">
</div>


    <div class="file-navigation-option">
      <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/archive/852d63d6a46d6b683c6add74fdbcfc73f2e41312.zip"
          class="btn btn-sm"
          rel="nofollow"
          data-ga-click="Gist, download zip, location:gist overview">
        Download ZIP
      </a>
    </div>
  </div>

  <div class="float-left">
    <nav class="reponav js-repo-nav js-sidenav-container-pjax"
     role="navigation"
     data-pjax="#gist-pjax-container">

  <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f" aria-label="Code" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-pjax="true" data-selected-links="gist_code /I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f">
    <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
    Code
</a>
    <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/revisions" aria-label="Revisions" class="js-selected-navigation-item reponav-item" data-hotkey="g r" data-pjax="true" data-selected-links="gist_revisions /I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/revisions">
      <svg aria-hidden="true" class="octicon octicon-git-commit" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M10.86 7c-.45-1.72-2-3-3.86-3-1.86 0-3.41 1.28-3.86 3H0v2h3.14c.45 1.72 2 3 3.86 3 1.86 0 3.41-1.28 3.86-3H14V7h-3.14zM7 10.2c-1.22 0-2.2-.98-2.2-2.2 0-1.22.98-2.2 2.2-2.2 1.22 0 2.2.98 2.2 2.2 0 1.22-.98 2.2-2.2 2.2z"/></svg>
      Revisions
      <span class="Counter">1</span>
</a>

</nav>

  </div>
</div>


  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content gist-content">
    
  <div>
    <div class="repository-meta js-details-container Details">
</div>


        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-calendar-task-one-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/calendar-task-one.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-calendar-task-one-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              calendar-task-one.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-calendar-task-one-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-calendar-task-one-c-LC1" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-calendar-task-one-c-LC2" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-calendar-task-one-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-calendar-task-one-c-LC4" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-calendar-task-one-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-calendar-task-one-c-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-calendar-task-one-c-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">calendar_t</span>{</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-calendar-task-one-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> events_count[<span class="pl-c1">52</span>];</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-calendar-task-one-c-LC9" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-calendar-task-one-c-LC10" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-calendar-task-one-c-LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span>* <span class="pl-en">events_per_month</span>(<span class="pl-k">struct</span> <span class="pl-c1">calendar_t</span> my_calendar);</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-calendar-task-one-c-LC12" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-calendar-task-one-c-LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-calendar-task-one-c-LC14" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-calendar-task-one-c-LC15" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">calendar_t</span> my_cal;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-calendar-task-one-c-LC16" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>, j = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">52</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-calendar-task-one-c-LC17" class="blob-code blob-code-inner js-file-line">    my_cal.<span class="pl-smi">events_count</span>[i] = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-calendar-task-one-c-LC18" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-calendar-task-one-c-LC19" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-calendar-task-one-c-LC20" class="blob-code blob-code-inner js-file-line">  my_cal.<span class="pl-smi">events_count</span>[<span class="pl-c1">2</span>] = <span class="pl-c1">76</span>;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-calendar-task-one-c-LC21" class="blob-code blob-code-inner js-file-line">  my_cal.<span class="pl-smi">events_count</span>[<span class="pl-c1">3</span>] = <span class="pl-c1">76</span>;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-calendar-task-one-c-LC22" class="blob-code blob-code-inner js-file-line">  my_cal.<span class="pl-smi">events_count</span>[<span class="pl-c1">40</span>] = <span class="pl-c1">76</span>;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-calendar-task-one-c-LC23" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-calendar-task-one-c-LC24" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> *all_events;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-calendar-task-one-c-LC25" class="blob-code blob-code-inner js-file-line">  all_events = <span class="pl-c1">events_per_month</span>(my_cal);</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-calendar-task-one-c-LC26" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">13</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-calendar-task-one-c-LC27" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, all_events[i]);</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-calendar-task-one-c-LC28" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-calendar-task-one-c-LC29" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-calendar-task-one-c-LC30" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-calendar-task-one-c-LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span>* <span class="pl-en">events_per_month</span>(<span class="pl-k">struct</span> <span class="pl-c1">calendar_t</span> my_calendar){</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-calendar-task-one-c-LC32" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-calendar-task-one-c-LC33" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> *months = (<span class="pl-k">int</span>*)<span class="pl-c1">malloc</span>(<span class="pl-c1">13</span> * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>));</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-calendar-task-one-c-LC34" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-calendar-task-one-c-LC35" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>, j = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">52</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-calendar-task-one-c-LC36" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> printf(&quot;ppppooo %d\n&quot;,my_calendar.events_count[i] );</span></td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-calendar-task-one-c-LC37" class="blob-code blob-code-inner js-file-line">    months[j] += my_calendar.<span class="pl-smi">events_count</span>[i];</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-calendar-task-one-c-LC38" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(i%<span class="pl-c1">4</span> == <span class="pl-c1">0</span>){</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-calendar-task-one-c-LC39" class="blob-code blob-code-inner js-file-line">      j++;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-calendar-task-one-c-LC40" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-calendar-task-one-c-LC41" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-calendar-task-one-c-LC42" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-calendar-task-one-c-LC43" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> months;</td>
      </tr>
      <tr>
        <td id="file-calendar-task-one-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-calendar-task-one-c-LC44" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-gistfile1-txt" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/gistfile1.txt" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-gistfile1-txt">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              gistfile1.txt
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-text">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-gistfile1-txt-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-gistfile1-txt-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-gistfile1-txt-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-gistfile1-txt-LC3" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-gistfile1-txt-LC4" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-gistfile1-txt-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-gistfile1-txt-LC6" class="blob-code blob-code-inner js-file-line">struct vector_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-gistfile1-txt-LC7" class="blob-code blob-code-inner js-file-line">  int now_size;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-gistfile1-txt-LC8" class="blob-code blob-code-inner js-file-line">  int now_count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-gistfile1-txt-LC9" class="blob-code blob-code-inner js-file-line">  int *arr;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-gistfile1-txt-LC10" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-gistfile1-txt-LC11" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-gistfile1-txt-LC12" class="blob-code blob-code-inner js-file-line">struct vector_t init();</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-gistfile1-txt-LC13" class="blob-code blob-code-inner js-file-line">void add_last(struct vector_t *vector, int item);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-gistfile1-txt-LC14" class="blob-code blob-code-inner js-file-line">int last(struct vector_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-gistfile1-txt-LC15" class="blob-code blob-code-inner js-file-line">int pop(struct vector_t*);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-gistfile1-txt-LC16" class="blob-code blob-code-inner js-file-line">int empty(struct vector_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-gistfile1-txt-LC17" class="blob-code blob-code-inner js-file-line">int full(struct vector_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-gistfile1-txt-LC18" class="blob-code blob-code-inner js-file-line">void destroy(struct vector_t*);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-gistfile1-txt-LC19" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-gistfile1-txt-LC20" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-gistfile1-txt-LC21" class="blob-code blob-code-inner js-file-line">int main(){ </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-gistfile1-txt-LC22" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-gistfile1-txt-LC23" class="blob-code blob-code-inner js-file-line">  vector_t MyVec = init();</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-gistfile1-txt-LC24" class="blob-code blob-code-inner js-file-line">  add_last(&amp;MyVec, 6);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-gistfile1-txt-LC25" class="blob-code blob-code-inner js-file-line">  add_last(&amp;MyVec, 8);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-gistfile1-txt-LC26" class="blob-code blob-code-inner js-file-line">  add_last(&amp;MyVec, 10);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-gistfile1-txt-LC27" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-gistfile1-txt-LC28" class="blob-code blob-code-inner js-file-line">  int last_save = pop(&amp;MyVec);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-gistfile1-txt-LC29" class="blob-code blob-code-inner js-file-line">  // destroy(&amp;MyVec);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-gistfile1-txt-LC30" class="blob-code blob-code-inner js-file-line">  int pulno = full(MyVec);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-gistfile1-txt-LC31" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-gistfile1-txt-LC32" class="blob-code blob-code-inner js-file-line">  // printf(&quot;%d\n&quot;, last(MyVec));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-gistfile1-txt-LC33" class="blob-code blob-code-inner js-file-line">  // printf(&quot;FULL: %d\n&quot;, pulno);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-gistfile1-txt-LC34" class="blob-code blob-code-inner js-file-line">  // printf(&quot;%d\n&quot;, MyVec.now_size);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-gistfile1-txt-LC35" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-gistfile1-txt-LC36" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-gistfile1-txt-LC37" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-gistfile1-txt-LC38" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-gistfile1-txt-LC39" class="blob-code blob-code-inner js-file-line">void destroy(struct vector_t *vector){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-gistfile1-txt-LC40" class="blob-code blob-code-inner js-file-line">    free(vector);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-gistfile1-txt-LC41" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-gistfile1-txt-LC42" class="blob-code blob-code-inner js-file-line">int full(struct vector_t vector){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-gistfile1-txt-LC43" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-gistfile1-txt-LC44" class="blob-code blob-code-inner js-file-line">  if(vector.now_size == vector.now_count){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-gistfile1-txt-LC45" class="blob-code blob-code-inner js-file-line">    return 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-gistfile1-txt-LC46" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-gistfile1-txt-LC47" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-gistfile1-txt-LC48" class="blob-code blob-code-inner js-file-line"> return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-gistfile1-txt-LC49" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-gistfile1-txt-LC50" class="blob-code blob-code-inner js-file-line">int pop(struct vector_t *vector){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-gistfile1-txt-LC51" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-gistfile1-txt-LC52" class="blob-code blob-code-inner js-file-line">  int vyrni = vector-&gt;arr[vector-&gt;now_count - 1];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-gistfile1-txt-LC53" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-gistfile1-txt-LC54" class="blob-code blob-code-inner js-file-line">  vector-&gt;arr = (int*)realloc(vector-&gt;arr, vector-&gt;now_size);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-gistfile1-txt-LC55" class="blob-code blob-code-inner js-file-line">  vector-&gt;now_count --;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-gistfile1-txt-LC56" class="blob-code blob-code-inner js-file-line">  return vyrni;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-gistfile1-txt-LC57" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-gistfile1-txt-LC58" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-gistfile1-txt-LC59" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-gistfile1-txt-LC60" class="blob-code blob-code-inner js-file-line">void add_last(struct vector_t *vector, int item){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-gistfile1-txt-LC61" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-gistfile1-txt-LC62" class="blob-code blob-code-inner js-file-line">  vector-&gt;arr[vector-&gt;now_count] = item;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-gistfile1-txt-LC63" class="blob-code blob-code-inner js-file-line">  vector-&gt;now_count ++;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-gistfile1-txt-LC64" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-gistfile1-txt-LC65" class="blob-code blob-code-inner js-file-line">  if(vector-&gt;now_size &lt; vector-&gt;now_count){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-gistfile1-txt-LC66" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-gistfile1-txt-LC67" class="blob-code blob-code-inner js-file-line">    vector-&gt;arr = (int*)realloc(vector-&gt;arr, (vector-&gt;now_size + 10) * sizeof(int));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-gistfile1-txt-LC68" class="blob-code blob-code-inner js-file-line">    vector-&gt;now_size += 10;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-gistfile1-txt-LC69" class="blob-code blob-code-inner js-file-line">  } </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-gistfile1-txt-LC70" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-gistfile1-txt-LC71" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-gistfile1-txt-LC72" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-gistfile1-txt-LC73" class="blob-code blob-code-inner js-file-line">struct vector_t init(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-gistfile1-txt-LC74" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-gistfile1-txt-LC75" class="blob-code blob-code-inner js-file-line">  vector_t MyVector;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-gistfile1-txt-LC76" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-gistfile1-txt-LC77" class="blob-code blob-code-inner js-file-line">  MyVector.now_size = 10;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-gistfile1-txt-LC78" class="blob-code blob-code-inner js-file-line">  MyVector.arr = (int*)malloc(10 * sizeof(int));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-gistfile1-txt-LC79" class="blob-code blob-code-inner js-file-line">  MyVector.now_count = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-gistfile1-txt-LC80" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-gistfile1-txt-LC81" class="blob-code blob-code-inner js-file-line">  return MyVector;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-gistfile1-txt-LC82" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-gistfile1-txt-LC83" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-gistfile1-txt-LC84" class="blob-code blob-code-inner js-file-line">int empty(struct vector_t vector){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-gistfile1-txt-LC85" class="blob-code blob-code-inner js-file-line">  if(vector.now_count != 0){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-gistfile1-txt-LC86" class="blob-code blob-code-inner js-file-line">    return 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-gistfile1-txt-LC87" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-gistfile1-txt-LC88" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-gistfile1-txt-LC89" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-gistfile1-txt-LC90" class="blob-code blob-code-inner js-file-line">int last(struct vector_t vector){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-gistfile1-txt-LC91" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-gistfile1-txt-LC92" class="blob-code blob-code-inner js-file-line">  return vector.arr[vector.now_count - 1];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-gistfile1-txt-LC93" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-gistfile1-txt-LC94" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="file-gistfile1-txt-LC95" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="file-gistfile1-txt-LC96" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="file-gistfile1-txt-LC97" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="file-gistfile1-txt-LC98" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="file-gistfile1-txt-LC99" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="file-gistfile1-txt-LC100" class="blob-code blob-code-inner js-file-line">struct stack_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="file-gistfile1-txt-LC101" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="file-gistfile1-txt-LC102" class="blob-code blob-code-inner js-file-line">  int *arr;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="file-gistfile1-txt-LC103" class="blob-code blob-code-inner js-file-line">  int count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="file-gistfile1-txt-LC104" class="blob-code blob-code-inner js-file-line">  int capacity;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="file-gistfile1-txt-LC105" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="file-gistfile1-txt-LC106" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="file-gistfile1-txt-LC107" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="file-gistfile1-txt-LC108" class="blob-code blob-code-inner js-file-line">// 1 </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="file-gistfile1-txt-LC109" class="blob-code blob-code-inner js-file-line">struct stack_t init(int initial_capacity);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="file-gistfile1-txt-LC110" class="blob-code blob-code-inner js-file-line">void destroy(struct stack_t *st);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="file-gistfile1-txt-LC111" class="blob-code blob-code-inner js-file-line">// 2</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="file-gistfile1-txt-LC112" class="blob-code blob-code-inner js-file-line">void push(struct stack_t *stack, int elem);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="file-gistfile1-txt-LC113" class="blob-code blob-code-inner js-file-line">int top(struct stack_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="file-gistfile1-txt-LC114" class="blob-code blob-code-inner js-file-line">void pop(struct stack_t *stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="file-gistfile1-txt-LC115" class="blob-code blob-code-inner js-file-line">int size(struct stack_t stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="file-gistfile1-txt-LC116" class="blob-code blob-code-inner js-file-line">//3</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="file-gistfile1-txt-LC117" class="blob-code blob-code-inner js-file-line">int is_full(struct stack_t stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="file-gistfile1-txt-LC118" class="blob-code blob-code-inner js-file-line">int is_empty(struct stack_t stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="file-gistfile1-txt-LC119" class="blob-code blob-code-inner js-file-line">void stack_resize(struct stack_t *stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="file-gistfile1-txt-LC120" class="blob-code blob-code-inner js-file-line">struct stack_t stack_copy(struct stack_t stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="file-gistfile1-txt-LC121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="file-gistfile1-txt-LC122" class="blob-code blob-code-inner js-file-line">int main(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="file-gistfile1-txt-LC123" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="file-gistfile1-txt-LC124" class="blob-code blob-code-inner js-file-line">  struct stack_t my_stack = init(10);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="file-gistfile1-txt-LC125" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="file-gistfile1-txt-LC126" class="blob-code blob-code-inner js-file-line">  my_stack.arr[0] = 3;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="file-gistfile1-txt-LC127" class="blob-code blob-code-inner js-file-line">  my_stack.arr[1] = 4;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="file-gistfile1-txt-LC128" class="blob-code blob-code-inner js-file-line">  my_stack.arr[2] = 5;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="file-gistfile1-txt-LC129" class="blob-code blob-code-inner js-file-line">  my_stack.arr[3] = 6;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="file-gistfile1-txt-LC130" class="blob-code blob-code-inner js-file-line">  my_stack.count = 4;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="file-gistfile1-txt-LC131" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="file-gistfile1-txt-LC132" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; my_stack.count; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="file-gistfile1-txt-LC133" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="file-gistfile1-txt-LC134" class="blob-code blob-code-inner js-file-line">  printf(&quot;El:%d &quot;, my_stack.arr[i]);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="file-gistfile1-txt-LC135" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="file-gistfile1-txt-LC136" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="file-gistfile1-txt-LC137" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="file-gistfile1-txt-LC138" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="file-gistfile1-txt-LC139" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="file-gistfile1-txt-LC140" class="blob-code blob-code-inner js-file-line">struct stack_t stack_copy(struct stack_t stack){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="file-gistfile1-txt-LC141" class="blob-code blob-code-inner js-file-line">  struct stack_t my_stack = init(10);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="file-gistfile1-txt-LC142" class="blob-code blob-code-inner js-file-line">  my_stack.count = stack.count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="file-gistfile1-txt-LC143" class="blob-code blob-code-inner js-file-line">  my_stack.capacity = stack.capacity;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="file-gistfile1-txt-LC144" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="file-gistfile1-txt-LC145" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; stack.count; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="file-gistfile1-txt-LC146" class="blob-code blob-code-inner js-file-line">    my_stack.arr[i] = stack.arr[i];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="file-gistfile1-txt-LC147" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="file-gistfile1-txt-LC148" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="file-gistfile1-txt-LC149" class="blob-code blob-code-inner js-file-line">  return my_stack;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="file-gistfile1-txt-LC150" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="file-gistfile1-txt-LC151" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="file-gistfile1-txt-LC152" class="blob-code blob-code-inner js-file-line">void stack_resize(struct stack_t *stack){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="file-gistfile1-txt-LC153" class="blob-code blob-code-inner js-file-line">  stack-&gt;arr = (int*)realloc(stack-&gt;arr, (stack-&gt;capacity *2));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="file-gistfile1-txt-LC154" class="blob-code blob-code-inner js-file-line">  stack-&gt;capacity *= 2;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="file-gistfile1-txt-LC155" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="file-gistfile1-txt-LC156" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="file-gistfile1-txt-LC157" class="blob-code blob-code-inner js-file-line">int is_empty(struct stack_t stack){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="file-gistfile1-txt-LC158" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="file-gistfile1-txt-LC159" class="blob-code blob-code-inner js-file-line">  if (stack.count == 0){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="file-gistfile1-txt-LC160" class="blob-code blob-code-inner js-file-line">    return 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="file-gistfile1-txt-LC161" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="file-gistfile1-txt-LC162" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="file-gistfile1-txt-LC163" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="file-gistfile1-txt-LC164" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="file-gistfile1-txt-LC165" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="file-gistfile1-txt-LC166" class="blob-code blob-code-inner js-file-line">int is_full(struct stack_t stack){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="file-gistfile1-txt-LC167" class="blob-code blob-code-inner js-file-line">  if(stack.count &gt;= stack.capacity){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="file-gistfile1-txt-LC168" class="blob-code blob-code-inner js-file-line">    return 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="file-gistfile1-txt-LC169" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="file-gistfile1-txt-LC170" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="file-gistfile1-txt-LC171" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="file-gistfile1-txt-LC172" class="blob-code blob-code-inner js-file-line">int size(struct stack_t stack){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="file-gistfile1-txt-LC173" class="blob-code blob-code-inner js-file-line">  return stack.count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="file-gistfile1-txt-LC174" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="file-gistfile1-txt-LC175" class="blob-code blob-code-inner js-file-line">void pop(struct stack_t *stack){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="file-gistfile1-txt-LC176" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="file-gistfile1-txt-LC177" class="blob-code blob-code-inner js-file-line">  stack-&gt;count --;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="file-gistfile1-txt-LC178" class="blob-code blob-code-inner js-file-line">  if((stack-&gt;capacity - stack-&gt;count) &gt; 10){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="file-gistfile1-txt-LC179" class="blob-code blob-code-inner js-file-line">    stack-&gt;arr = (int*)realloc(stack-&gt;arr, (stack-&gt;capacity + 10));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="file-gistfile1-txt-LC180" class="blob-code blob-code-inner js-file-line">    stack-&gt;capacity -= 10;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="file-gistfile1-txt-LC181" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="file-gistfile1-txt-LC182" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="file-gistfile1-txt-LC183" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="file-gistfile1-txt-LC184" class="blob-code blob-code-inner js-file-line">int top(struct stack_t st){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="file-gistfile1-txt-LC185" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="file-gistfile1-txt-LC186" class="blob-code blob-code-inner js-file-line">  return st.arr[st.count - 1];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="file-gistfile1-txt-LC187" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="file-gistfile1-txt-LC188" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="file-gistfile1-txt-LC189" class="blob-code blob-code-inner js-file-line">void push(struct stack_t *stack, int elem){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="file-gistfile1-txt-LC190" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="file-gistfile1-txt-LC191" class="blob-code blob-code-inner js-file-line">  if(is_full(*stack)){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="file-gistfile1-txt-LC192" class="blob-code blob-code-inner js-file-line">    stack-&gt;arr = (int*)realloc(stack-&gt;arr, (stack-&gt;capacity + 10));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="file-gistfile1-txt-LC193" class="blob-code blob-code-inner js-file-line">    stack-&gt;capacity += 10;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="file-gistfile1-txt-LC194" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="file-gistfile1-txt-LC195" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="file-gistfile1-txt-LC196" class="blob-code blob-code-inner js-file-line">  for (int i = stack-&gt;count; i &gt;= 0; i--){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="file-gistfile1-txt-LC197" class="blob-code blob-code-inner js-file-line">    stack-&gt;arr[i + 1] = stack-&gt;arr[i];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="file-gistfile1-txt-LC198" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="file-gistfile1-txt-LC199" class="blob-code blob-code-inner js-file-line">  stack-&gt;arr[0] = elem;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="file-gistfile1-txt-LC200" class="blob-code blob-code-inner js-file-line">  stack-&gt;count += 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="file-gistfile1-txt-LC201" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="file-gistfile1-txt-LC202" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="file-gistfile1-txt-LC203" class="blob-code blob-code-inner js-file-line">void destroy(struct stack_t *st){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="file-gistfile1-txt-LC204" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="file-gistfile1-txt-LC205" class="blob-code blob-code-inner js-file-line">  free(st-&gt;arr);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="file-gistfile1-txt-LC206" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="file-gistfile1-txt-LC207" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="file-gistfile1-txt-LC208" class="blob-code blob-code-inner js-file-line">struct stack_t init(int initial_capacity){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="file-gistfile1-txt-LC209" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="file-gistfile1-txt-LC210" class="blob-code blob-code-inner js-file-line">  struct stack_t new_stack;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="file-gistfile1-txt-LC211" class="blob-code blob-code-inner js-file-line">  new_stack.capacity = initial_capacity;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="file-gistfile1-txt-LC212" class="blob-code blob-code-inner js-file-line">  new_stack.count = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="file-gistfile1-txt-LC213" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="file-gistfile1-txt-LC214" class="blob-code blob-code-inner js-file-line">  new_stack.arr = (int*)malloc(new_stack.capacity * sizeof(int));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="file-gistfile1-txt-LC215" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="file-gistfile1-txt-LC216" class="blob-code blob-code-inner js-file-line">  return new_stack;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="file-gistfile1-txt-LC217" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="file-gistfile1-txt-LC218" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="file-gistfile1-txt-LC219" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="file-gistfile1-txt-LC220" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="file-gistfile1-txt-LC221" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="file-gistfile1-txt-LC222" class="blob-code blob-code-inner js-file-line">#include &lt;string.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="file-gistfile1-txt-LC223" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="file-gistfile1-txt-LC224" class="blob-code blob-code-inner js-file-line">struct stack_t {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="file-gistfile1-txt-LC225" class="blob-code blob-code-inner js-file-line">  struct list_t *list;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="file-gistfile1-txt-LC226" class="blob-code blob-code-inner js-file-line">  int size;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="file-gistfile1-txt-LC227" class="blob-code blob-code-inner js-file-line">  int capacity;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="file-gistfile1-txt-LC228" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="file-gistfile1-txt-LC229" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="file-gistfile1-txt-LC230" class="blob-code blob-code-inner js-file-line">struct list_t {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="file-gistfile1-txt-LC231" class="blob-code blob-code-inner js-file-line">  struct node_t *head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="file-gistfile1-txt-LC232" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="file-gistfile1-txt-LC233" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="file-gistfile1-txt-LC234" class="blob-code blob-code-inner js-file-line">struct node_t {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="file-gistfile1-txt-LC235" class="blob-code blob-code-inner js-file-line">  int value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="file-gistfile1-txt-LC236" class="blob-code blob-code-inner js-file-line">  struct node_t *next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="file-gistfile1-txt-LC237" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="file-gistfile1-txt-LC238" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="file-gistfile1-txt-LC239" class="blob-code blob-code-inner js-file-line">void push(struct stack_t*, int);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="file-gistfile1-txt-LC240" class="blob-code blob-code-inner js-file-line">int top(struct stack_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="file-gistfile1-txt-LC241" class="blob-code blob-code-inner js-file-line">void pop(struct stack_t*);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="file-gistfile1-txt-LC242" class="blob-code blob-code-inner js-file-line">int size(struct stack_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="file-gistfile1-txt-LC243" class="blob-code blob-code-inner js-file-line">struct stack_t stack_init();</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="file-gistfile1-txt-LC244" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="file-gistfile1-txt-LC245" class="blob-code blob-code-inner js-file-line">void insert(struct list_t*, int);//////////</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="file-gistfile1-txt-LC246" class="blob-code blob-code-inner js-file-line">void insert_after(struct list_t*, int);///////////</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="file-gistfile1-txt-LC247" class="blob-code blob-code-inner js-file-line">void remove_before(struct list_t*);///////////</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="file-gistfile1-txt-LC248" class="blob-code blob-code-inner js-file-line">void remove_after(struct list_t*);///////////////</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="file-gistfile1-txt-LC249" class="blob-code blob-code-inner js-file-line">struct node_t *create(int);////////////////</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="file-gistfile1-txt-LC250" class="blob-code blob-code-inner js-file-line">int list_size(struct list_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="file-gistfile1-txt-LC251" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="file-gistfile1-txt-LC252" class="blob-code blob-code-inner js-file-line">int are_ballanced(char *str);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="file-gistfile1-txt-LC253" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="file-gistfile1-txt-LC254" class="blob-code blob-code-inner js-file-line">int main() {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="file-gistfile1-txt-LC255" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="file-gistfile1-txt-LC256" class="blob-code blob-code-inner js-file-line">  struct list_t l;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="file-gistfile1-txt-LC257" class="blob-code blob-code-inner js-file-line">  struct node_t *n = create(5);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="file-gistfile1-txt-LC258" class="blob-code blob-code-inner js-file-line">  l.head = n;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="file-gistfile1-txt-LC259" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="file-gistfile1-txt-LC260" class="blob-code blob-code-inner js-file-line">  printf(&quot;%d\n&quot;, l.head-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="file-gistfile1-txt-LC261" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="file-gistfile1-txt-LC262" class="blob-code blob-code-inner js-file-line">  insert_after(&amp;l, 10);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="file-gistfile1-txt-LC263" class="blob-code blob-code-inner js-file-line">  remove_after(&amp;l);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="file-gistfile1-txt-LC264" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="file-gistfile1-txt-LC265" class="blob-code blob-code-inner js-file-line">  printf(&quot;%d\n&quot;, l.head-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="file-gistfile1-txt-LC266" class="blob-code blob-code-inner js-file-line">  //printf(&quot;%d\n&quot;, l.head-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="file-gistfile1-txt-LC267" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="file-gistfile1-txt-LC268" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="file-gistfile1-txt-LC269" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="file-gistfile1-txt-LC270" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="file-gistfile1-txt-LC271" class="blob-code blob-code-inner js-file-line">struct node_t *create(int value) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="file-gistfile1-txt-LC272" class="blob-code blob-code-inner js-file-line">  struct node_t *elem = (struct node_t*)malloc(sizeof(struct node_t));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="file-gistfile1-txt-LC273" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="file-gistfile1-txt-LC274" class="blob-code blob-code-inner js-file-line">  elem-&gt;value = value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="file-gistfile1-txt-LC275" class="blob-code blob-code-inner js-file-line">  elem-&gt;next = NULL;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="file-gistfile1-txt-LC276" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="file-gistfile1-txt-LC277" class="blob-code blob-code-inner js-file-line">  return elem;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="file-gistfile1-txt-LC278" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="file-gistfile1-txt-LC279" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="file-gistfile1-txt-LC280" class="blob-code blob-code-inner js-file-line">int are_ballanced(char *str) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="file-gistfile1-txt-LC281" class="blob-code blob-code-inner js-file-line">  struct stack_t stack = stack_init();</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="file-gistfile1-txt-LC282" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="file-gistfile1-txt-LC283" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; strlen(str); i++) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="file-gistfile1-txt-LC284" class="blob-code blob-code-inner js-file-line">    if (str[i] == &#39;(&#39; || str[i] == &#39;[&#39; || str[i] == &#39;{&#39;) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="file-gistfile1-txt-LC285" class="blob-code blob-code-inner js-file-line">      push(&amp;stack, str[i]); </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="file-gistfile1-txt-LC286" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="file-gistfile1-txt-LC287" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="file-gistfile1-txt-LC288" class="blob-code blob-code-inner js-file-line">    if (str[i] == &#39;)&#39; || str[i] == &#39;]&#39; || str[i] == &#39;}&#39;) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="file-gistfile1-txt-LC289" class="blob-code blob-code-inner js-file-line">      if (size(stack) == 0) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="file-gistfile1-txt-LC290" class="blob-code blob-code-inner js-file-line">        return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="file-gistfile1-txt-LC291" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="file-gistfile1-txt-LC292" class="blob-code blob-code-inner js-file-line">      int elem = top(stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="file-gistfile1-txt-LC293" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="file-gistfile1-txt-LC294" class="blob-code blob-code-inner js-file-line">      if (0/* is the same as the closing bracket*/) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="file-gistfile1-txt-LC295" class="blob-code blob-code-inner js-file-line">        pop(&amp;stack);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="file-gistfile1-txt-LC296" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="file-gistfile1-txt-LC297" class="blob-code blob-code-inner js-file-line">      else {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="file-gistfile1-txt-LC298" class="blob-code blob-code-inner js-file-line">        return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="file-gistfile1-txt-LC299" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="file-gistfile1-txt-LC300" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="file-gistfile1-txt-LC301" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="file-gistfile1-txt-LC302" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="file-gistfile1-txt-LC303" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="file-gistfile1-txt-LC304" class="blob-code blob-code-inner js-file-line">  return size(stack) == 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="file-gistfile1-txt-LC305" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="file-gistfile1-txt-LC306" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="file-gistfile1-txt-LC307" class="blob-code blob-code-inner js-file-line">void push(struct stack_t *s, int elem) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="file-gistfile1-txt-LC308" class="blob-code blob-code-inner js-file-line">  insert(s-&gt;list, elem);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="file-gistfile1-txt-LC309" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="file-gistfile1-txt-LC310" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="file-gistfile1-txt-LC311" class="blob-code blob-code-inner js-file-line">int top(struct stack_t s) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="file-gistfile1-txt-LC312" class="blob-code blob-code-inner js-file-line">  return s.list-&gt;head-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="file-gistfile1-txt-LC313" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="file-gistfile1-txt-LC314" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="file-gistfile1-txt-LC315" class="blob-code blob-code-inner js-file-line">void pop(struct stack_t *s) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="file-gistfile1-txt-LC316" class="blob-code blob-code-inner js-file-line">  remove_before(s-&gt;list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="file-gistfile1-txt-LC317" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="file-gistfile1-txt-LC318" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="file-gistfile1-txt-LC319" class="blob-code blob-code-inner js-file-line">int size(struct stack_t s) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="file-gistfile1-txt-LC320" class="blob-code blob-code-inner js-file-line">  return list_size(*(s.list));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="file-gistfile1-txt-LC321" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="file-gistfile1-txt-LC322" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="file-gistfile1-txt-LC323" class="blob-code blob-code-inner js-file-line">int list_size(struct list_t l) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="file-gistfile1-txt-LC324" class="blob-code blob-code-inner js-file-line">  int count = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="file-gistfile1-txt-LC325" class="blob-code blob-code-inner js-file-line">  struct node_t *elem = l.head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="file-gistfile1-txt-LC326" class="blob-code blob-code-inner js-file-line">  for(;elem-&gt;next != NULL; count++, elem = elem-&gt;next) {}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="file-gistfile1-txt-LC327" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="file-gistfile1-txt-LC328" class="blob-code blob-code-inner js-file-line">  return count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="file-gistfile1-txt-LC329" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="file-gistfile1-txt-LC330" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="file-gistfile1-txt-LC331" class="blob-code blob-code-inner js-file-line">void remove_before(struct list_t *list) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="file-gistfile1-txt-LC332" class="blob-code blob-code-inner js-file-line">  struct node_t *removed = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="file-gistfile1-txt-LC333" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="file-gistfile1-txt-LC334" class="blob-code blob-code-inner js-file-line">  list-&gt;head = removed-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="file-gistfile1-txt-LC335" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="file-gistfile1-txt-LC336" class="blob-code blob-code-inner js-file-line">  free(removed);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="file-gistfile1-txt-LC337" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="file-gistfile1-txt-LC338" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="file-gistfile1-txt-LC339" class="blob-code blob-code-inner js-file-line">void remove_after(struct list_t* list) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="file-gistfile1-txt-LC340" class="blob-code blob-code-inner js-file-line">  struct node_t *last = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="file-gistfile1-txt-LC341" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="file-gistfile1-txt-LC342" class="blob-code blob-code-inner js-file-line">  if (last-&gt;next == NULL) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="file-gistfile1-txt-LC343" class="blob-code blob-code-inner js-file-line">    remove_before(list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="file-gistfile1-txt-LC344" class="blob-code blob-code-inner js-file-line">    return;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="file-gistfile1-txt-LC345" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="file-gistfile1-txt-LC346" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="file-gistfile1-txt-LC347" class="blob-code blob-code-inner js-file-line">  while(last-&gt;next-&gt;next != NULL) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="file-gistfile1-txt-LC348" class="blob-code blob-code-inner js-file-line">    last = last-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="file-gistfile1-txt-LC349" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="file-gistfile1-txt-LC350" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="file-gistfile1-txt-LC351" class="blob-code blob-code-inner js-file-line">  free(last-&gt;next);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="file-gistfile1-txt-LC352" class="blob-code blob-code-inner js-file-line">  last-&gt;next = NULL;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="file-gistfile1-txt-LC353" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="file-gistfile1-txt-LC354" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="file-gistfile1-txt-LC355" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="file-gistfile1-txt-LC356" class="blob-code blob-code-inner js-file-line">void insert_after(struct list_t* list, int elem) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="file-gistfile1-txt-LC357" class="blob-code blob-code-inner js-file-line">  struct node_t *last = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="file-gistfile1-txt-LC358" class="blob-code blob-code-inner js-file-line">  while(last-&gt;next != NULL) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="file-gistfile1-txt-LC359" class="blob-code blob-code-inner js-file-line">    last = last-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="file-gistfile1-txt-LC360" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="file-gistfile1-txt-LC361" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="file-gistfile1-txt-LC362" class="blob-code blob-code-inner js-file-line">  struct node_t *new_elem = create(elem);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="file-gistfile1-txt-LC363" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="file-gistfile1-txt-LC364" class="blob-code blob-code-inner js-file-line">  last-&gt;next = new_elem;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="file-gistfile1-txt-LC365" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="file-gistfile1-txt-LC366" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="file-gistfile1-txt-LC367" class="blob-code blob-code-inner js-file-line">void insert(struct list_t *list, int elem) {</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="file-gistfile1-txt-LC368" class="blob-code blob-code-inner js-file-line">  struct node_t *new_elem = create(elem);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="file-gistfile1-txt-LC369" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="file-gistfile1-txt-LC370" class="blob-code blob-code-inner js-file-line">  new_elem-&gt;next = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="file-gistfile1-txt-LC371" class="blob-code blob-code-inner js-file-line">  list-&gt;head = new_elem;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="file-gistfile1-txt-LC372" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="file-gistfile1-txt-LC373" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="file-gistfile1-txt-LC374" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="file-gistfile1-txt-LC375" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="file-gistfile1-txt-LC376" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="file-gistfile1-txt-LC377" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="file-gistfile1-txt-LC378" class="blob-code blob-code-inner js-file-line">struct node_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="file-gistfile1-txt-LC379" class="blob-code blob-code-inner js-file-line">  int value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="file-gistfile1-txt-LC380" class="blob-code blob-code-inner js-file-line">  struct node_t *next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="file-gistfile1-txt-LC381" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="file-gistfile1-txt-LC382" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="file-gistfile1-txt-LC383" class="blob-code blob-code-inner js-file-line">struct list_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="file-gistfile1-txt-LC384" class="blob-code blob-code-inner js-file-line">  struct node_t *head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="file-gistfile1-txt-LC385" class="blob-code blob-code-inner js-file-line">  int size;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="file-gistfile1-txt-LC386" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="file-gistfile1-txt-LC387" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="file-gistfile1-txt-LC388" class="blob-code blob-code-inner js-file-line">// struct list_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="file-gistfile1-txt-LC389" class="blob-code blob-code-inner js-file-line">//   struct list_t *list;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="file-gistfile1-txt-LC390" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="file-gistfile1-txt-LC391" class="blob-code blob-code-inner js-file-line">// };</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="file-gistfile1-txt-LC392" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="file-gistfile1-txt-LC393" class="blob-code blob-code-inner js-file-line">struct node_t *create(int element);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="file-gistfile1-txt-LC394" class="blob-code blob-code-inner js-file-line">///BASIC</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="file-gistfile1-txt-LC395" class="blob-code blob-code-inner js-file-line">void insert_bef(struct list_t *my_list, int element);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="file-gistfile1-txt-LC396" class="blob-code blob-code-inner js-file-line">void remove_bef(struct list_t *my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="file-gistfile1-txt-LC397" class="blob-code blob-code-inner js-file-line">void insert_af(struct list_t *my_list, int element, int index);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="file-gistfile1-txt-LC398" class="blob-code blob-code-inner js-file-line">void remove_af(struct list_t *my_list, int index);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="file-gistfile1-txt-LC399" class="blob-code blob-code-inner js-file-line">int get(struct list_t *my_list, int index);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="file-gistfile1-txt-LC400" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="file-gistfile1-txt-LC401" class="blob-code blob-code-inner js-file-line">//2nd SLIDE</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="file-gistfile1-txt-LC402" class="blob-code blob-code-inner js-file-line">struct list_t init_list();</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="file-gistfile1-txt-LC403" class="blob-code blob-code-inner js-file-line">void destroy_list(struct list_t *my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="file-gistfile1-txt-LC404" class="blob-code blob-code-inner js-file-line">int size_stack(struct list_t *my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="file-gistfile1-txt-LC405" class="blob-code blob-code-inner js-file-line">int is_empty(struct list_t *my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="file-gistfile1-txt-LC406" class="blob-code blob-code-inner js-file-line">int top(struct list_t my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="file-gistfile1-txt-LC407" class="blob-code blob-code-inner js-file-line">struct list_t copy(struct list_t *my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="file-gistfile1-txt-LC408" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="file-gistfile1-txt-LC409" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="file-gistfile1-txt-LC410" class="blob-code blob-code-inner js-file-line">int main(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="file-gistfile1-txt-LC411" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="file-gistfile1-txt-LC412" class="blob-code blob-code-inner js-file-line">  struct list_t l;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="file-gistfile1-txt-LC413" class="blob-code blob-code-inner js-file-line">  struct node_t *n = create(5);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="file-gistfile1-txt-LC414" class="blob-code blob-code-inner js-file-line">  l.head = n;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="file-gistfile1-txt-LC415" class="blob-code blob-code-inner js-file-line">  insert_bef(&amp;l, 4);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="file-gistfile1-txt-LC416" class="blob-code blob-code-inner js-file-line">  insert_af(&amp;l, 11, 0);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="file-gistfile1-txt-LC417" class="blob-code blob-code-inner js-file-line">  // remove_bef(&amp;l);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="file-gistfile1-txt-LC418" class="blob-code blob-code-inner js-file-line">  // remove_af(&amp;l, 0);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="file-gistfile1-txt-LC419" class="blob-code blob-code-inner js-file-line">  struct list_t new_list = copy(&amp;l);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="file-gistfile1-txt-LC420" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="file-gistfile1-txt-LC421" class="blob-code blob-code-inner js-file-line">  printf(&quot;%d\n&quot;, get(&amp;new_list, 2));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="file-gistfile1-txt-LC422" class="blob-code blob-code-inner js-file-line">  printf(&quot;%d %d\n&quot;, get(&amp;l, 0), top(l));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="file-gistfile1-txt-LC423" class="blob-code blob-code-inner js-file-line">  // printf(&quot;%d %d %d\n&quot;, l.head-&gt;value, l.head-&gt;next-&gt;value, l.head-&gt;next-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="file-gistfile1-txt-LC424" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="file-gistfile1-txt-LC425" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="file-gistfile1-txt-LC426" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="file-gistfile1-txt-LC427" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="file-gistfile1-txt-LC428" class="blob-code blob-code-inner js-file-line">int top(struct list_t my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="file-gistfile1-txt-LC429" class="blob-code blob-code-inner js-file-line">  return my_list.head-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="file-gistfile1-txt-LC430" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="file-gistfile1-txt-LC431" class="blob-code blob-code-inner js-file-line">struct list_t copy(struct list_t *my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="file-gistfile1-txt-LC432" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="file-gistfile1-txt-LC433" class="blob-code blob-code-inner js-file-line">  struct list_t new_list = init_list();</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="file-gistfile1-txt-LC434" class="blob-code blob-code-inner js-file-line">  struct node_t *current_node = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="file-gistfile1-txt-LC435" class="blob-code blob-code-inner js-file-line">  struct node_t *new_node;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="file-gistfile1-txt-LC436" class="blob-code blob-code-inner js-file-line">  struct node_t *previous_node;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="file-gistfile1-txt-LC437" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="file-gistfile1-txt-LC438" class="blob-code blob-code-inner js-file-line">  while (current_node != NULL){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="file-gistfile1-txt-LC439" class="blob-code blob-code-inner js-file-line">    new_node = create(current_node-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="file-gistfile1-txt-LC440" class="blob-code blob-code-inner js-file-line">    if(new_list.head == NULL){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="file-gistfile1-txt-LC441" class="blob-code blob-code-inner js-file-line">      new_list.head = new_node;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="file-gistfile1-txt-LC442" class="blob-code blob-code-inner js-file-line">    }else{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="file-gistfile1-txt-LC443" class="blob-code blob-code-inner js-file-line">      previous_node-&gt;next = new_node;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="file-gistfile1-txt-LC444" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="file-gistfile1-txt-LC445" class="blob-code blob-code-inner js-file-line">    previous_node = new_node;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="file-gistfile1-txt-LC446" class="blob-code blob-code-inner js-file-line">    current_node = current_node-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="file-gistfile1-txt-LC447" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="file-gistfile1-txt-LC448" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="file-gistfile1-txt-LC449" class="blob-code blob-code-inner js-file-line">  new_list.size = my_list-&gt;size;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="file-gistfile1-txt-LC450" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="file-gistfile1-txt-LC451" class="blob-code blob-code-inner js-file-line">  return new_list;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="file-gistfile1-txt-LC452" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="file-gistfile1-txt-LC453" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="file-gistfile1-txt-LC454" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="file-gistfile1-txt-LC455" class="blob-code blob-code-inner js-file-line">int is_empty(struct list_t *my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="file-gistfile1-txt-LC456" class="blob-code blob-code-inner js-file-line">  if(my_list-&gt;size == 0){  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="file-gistfile1-txt-LC457" class="blob-code blob-code-inner js-file-line">    return 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="file-gistfile1-txt-LC458" class="blob-code blob-code-inner js-file-line">  }else{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="file-gistfile1-txt-LC459" class="blob-code blob-code-inner js-file-line">    return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="file-gistfile1-txt-LC460" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="file-gistfile1-txt-LC461" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="file-gistfile1-txt-LC462" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="file-gistfile1-txt-LC463" class="blob-code blob-code-inner js-file-line">int size_stack(struct list_t *my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="file-gistfile1-txt-LC464" class="blob-code blob-code-inner js-file-line">  return my_list-&gt;size;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="file-gistfile1-txt-LC465" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="file-gistfile1-txt-LC466" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="file-gistfile1-txt-LC467" class="blob-code blob-code-inner js-file-line">void destroy_list(struct list_t *my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="file-gistfile1-txt-LC468" class="blob-code blob-code-inner js-file-line">  struct node_t *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="file-gistfile1-txt-LC469" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="file-gistfile1-txt-LC470" class="blob-code blob-code-inner js-file-line">  while(find-&gt;next != NULL){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="file-gistfile1-txt-LC471" class="blob-code blob-code-inner js-file-line">    struct node_t *trash = find;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="file-gistfile1-txt-LC472" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="file-gistfile1-txt-LC473" class="blob-code blob-code-inner js-file-line">    free(trash);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="file-gistfile1-txt-LC474" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="file-gistfile1-txt-LC475" class="blob-code blob-code-inner js-file-line">  free(find);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="file-gistfile1-txt-LC476" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="file-gistfile1-txt-LC477" class="blob-code blob-code-inner js-file-line">  my_list-&gt;head = NULL;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="file-gistfile1-txt-LC478" class="blob-code blob-code-inner js-file-line">  my_list-&gt;size = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="file-gistfile1-txt-LC479" class="blob-code blob-code-inner js-file-line">  free(my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="file-gistfile1-txt-LC480" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="file-gistfile1-txt-LC481" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="file-gistfile1-txt-LC482" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="file-gistfile1-txt-LC483" class="blob-code blob-code-inner js-file-line">struct list_t init_list(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="file-gistfile1-txt-LC484" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="file-gistfile1-txt-LC485" class="blob-code blob-code-inner js-file-line">  struct list_t new_list;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="file-gistfile1-txt-LC486" class="blob-code blob-code-inner js-file-line">  new_list.head = NULL;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="file-gistfile1-txt-LC487" class="blob-code blob-code-inner js-file-line">  new_list.size = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="file-gistfile1-txt-LC488" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="file-gistfile1-txt-LC489" class="blob-code blob-code-inner js-file-line">  return new_list;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="file-gistfile1-txt-LC490" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="file-gistfile1-txt-LC491" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="file-gistfile1-txt-LC492" class="blob-code blob-code-inner js-file-line">int get(struct list_t *my_list, int index){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="file-gistfile1-txt-LC493" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="file-gistfile1-txt-LC494" class="blob-code blob-code-inner js-file-line">  struct node_t *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="file-gistfile1-txt-LC495" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="file-gistfile1-txt-LC496" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; index; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="file-gistfile1-txt-LC497" class="blob-code blob-code-inner js-file-line">      if(find == NULL){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="file-gistfile1-txt-LC498" class="blob-code blob-code-inner js-file-line">        return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="file-gistfile1-txt-LC499" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="file-gistfile1-txt-LC500" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="file-gistfile1-txt-LC501" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="file-gistfile1-txt-LC502" class="blob-code blob-code-inner js-file-line">  return find-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="file-gistfile1-txt-LC503" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="file-gistfile1-txt-LC504" class="blob-code blob-code-inner js-file-line">void remove_af(struct list_t *my_list, int index){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="file-gistfile1-txt-LC505" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="file-gistfile1-txt-LC506" class="blob-code blob-code-inner js-file-line">  struct node_t *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="file-gistfile1-txt-LC507" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="file-gistfile1-txt-LC508" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; index; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="file-gistfile1-txt-LC509" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="file-gistfile1-txt-LC510" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="file-gistfile1-txt-LC511" class="blob-code blob-code-inner js-file-line">  struct node_t *trash = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="file-gistfile1-txt-LC512" class="blob-code blob-code-inner js-file-line">  find-&gt;next = find-&gt;next-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="file-gistfile1-txt-LC513" class="blob-code blob-code-inner js-file-line">  free(trash);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="file-gistfile1-txt-LC514" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="file-gistfile1-txt-LC515" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="file-gistfile1-txt-LC516" class="blob-code blob-code-inner js-file-line">void insert_af(struct list_t *my_list, int element, int index){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="file-gistfile1-txt-LC517" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="file-gistfile1-txt-LC518" class="blob-code blob-code-inner js-file-line">  struct node_t *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="file-gistfile1-txt-LC519" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="file-gistfile1-txt-LC520" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; index; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="file-gistfile1-txt-LC521" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="file-gistfile1-txt-LC522" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="file-gistfile1-txt-LC523" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="file-gistfile1-txt-LC524" class="blob-code blob-code-inner js-file-line">  struct node_t *new_el = create(element);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="file-gistfile1-txt-LC525" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="file-gistfile1-txt-LC526" class="blob-code blob-code-inner js-file-line">  find-&gt;next = new_el;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="file-gistfile1-txt-LC527" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="file-gistfile1-txt-LC528" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="file-gistfile1-txt-LC529" class="blob-code blob-code-inner js-file-line">void remove_bef(struct list_t *my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="file-gistfile1-txt-LC530" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="file-gistfile1-txt-LC531" class="blob-code blob-code-inner js-file-line">  struct node_t *first = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="file-gistfile1-txt-LC532" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="file-gistfile1-txt-LC533" class="blob-code blob-code-inner js-file-line">  my_list-&gt;head = my_list-&gt;head-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="file-gistfile1-txt-LC534" class="blob-code blob-code-inner js-file-line">  //Za da pochistim pametta ot stariq head</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="file-gistfile1-txt-LC535" class="blob-code blob-code-inner js-file-line">  free(first);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="file-gistfile1-txt-LC536" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="file-gistfile1-txt-LC537" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="file-gistfile1-txt-LC538" class="blob-code blob-code-inner js-file-line">void insert_bef(struct list_t *my_list, int element){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="file-gistfile1-txt-LC539" class="blob-code blob-code-inner js-file-line">  struct node_t *new_el = create(element);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="file-gistfile1-txt-LC540" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="file-gistfile1-txt-LC541" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="file-gistfile1-txt-LC542" class="blob-code blob-code-inner js-file-line">  my_list-&gt;head = new_el;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="file-gistfile1-txt-LC543" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="file-gistfile1-txt-LC544" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="file-gistfile1-txt-LC545" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="file-gistfile1-txt-LC546" class="blob-code blob-code-inner js-file-line">struct node_t *create(int element){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="file-gistfile1-txt-LC547" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="file-gistfile1-txt-LC548" class="blob-code blob-code-inner js-file-line">  struct node_t *new_el = (struct node_t*)malloc(sizeof(struct node_t));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="file-gistfile1-txt-LC549" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="file-gistfile1-txt-LC550" class="blob-code blob-code-inner js-file-line">  new_el-&gt;value = element;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="file-gistfile1-txt-LC551" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = NULL;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="file-gistfile1-txt-LC552" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="file-gistfile1-txt-LC553" class="blob-code blob-code-inner js-file-line">  return new_el;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="file-gistfile1-txt-LC554" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="file-gistfile1-txt-LC555" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="file-gistfile1-txt-LC556" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="file-gistfile1-txt-LC557" class="blob-code blob-code-inner js-file-line">#include &lt;string.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="file-gistfile1-txt-LC558" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="file-gistfile1-txt-LC559" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="file-gistfile1-txt-LC560" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="file-gistfile1-txt-LC561" class="blob-code blob-code-inner js-file-line">struct calendar_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="file-gistfile1-txt-LC562" class="blob-code blob-code-inner js-file-line">  int events_count[52];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="file-gistfile1-txt-LC563" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="file-gistfile1-txt-LC564" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="file-gistfile1-txt-LC565" class="blob-code blob-code-inner js-file-line">int main(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="file-gistfile1-txt-LC566" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="file-gistfile1-txt-LC567" class="blob-code blob-code-inner js-file-line">  struct calendar_t my_cal;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="file-gistfile1-txt-LC568" class="blob-code blob-code-inner js-file-line">  for (int i = 0, j = 0; i &lt; 52; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="file-gistfile1-txt-LC569" class="blob-code blob-code-inner js-file-line">    my_cal.events_count[i] = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="file-gistfile1-txt-LC570" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="file-gistfile1-txt-LC571" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="file-gistfile1-txt-LC572" class="blob-code blob-code-inner js-file-line">  my_cal.events_count[2] = 76;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="file-gistfile1-txt-LC573" class="blob-code blob-code-inner js-file-line">  my_cal.events_count[3] = 76;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="file-gistfile1-txt-LC574" class="blob-code blob-code-inner js-file-line">  my_cal.events_count[40] = 76;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="file-gistfile1-txt-LC575" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="file-gistfile1-txt-LC576" class="blob-code blob-code-inner js-file-line">  int *all_events;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="file-gistfile1-txt-LC577" class="blob-code blob-code-inner js-file-line">  all_events = events_per_month(my_cal);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="file-gistfile1-txt-LC578" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; 13; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="file-gistfile1-txt-LC579" class="blob-code blob-code-inner js-file-line">    printf(&quot;%d\n&quot;, all_events[i]);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="file-gistfile1-txt-LC580" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="file-gistfile1-txt-LC581" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="file-gistfile1-txt-LC582" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="file-gistfile1-txt-LC583" class="blob-code blob-code-inner js-file-line">int* events_per_month(struct calendar_t my_calendar){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="file-gistfile1-txt-LC584" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="file-gistfile1-txt-LC585" class="blob-code blob-code-inner js-file-line">  int *months = (int*)malloc(13 * sizeof(int));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="file-gistfile1-txt-LC586" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="file-gistfile1-txt-LC587" class="blob-code blob-code-inner js-file-line">  for (int i = 0, j = 0; i &lt; 52; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="file-gistfile1-txt-LC588" class="blob-code blob-code-inner js-file-line">    // printf(&quot;ppppooo %d\n&quot;,my_calendar.events_count[i] );</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="file-gistfile1-txt-LC589" class="blob-code blob-code-inner js-file-line">    months[j] += my_calendar.events_count[i];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="file-gistfile1-txt-LC590" class="blob-code blob-code-inner js-file-line">    if(i%4 == 0){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="file-gistfile1-txt-LC591" class="blob-code blob-code-inner js-file-line">      j++;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="file-gistfile1-txt-LC592" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="file-gistfile1-txt-LC593" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="file-gistfile1-txt-LC594" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="file-gistfile1-txt-LC595" class="blob-code blob-code-inner js-file-line">  return months;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="file-gistfile1-txt-LC596" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="file-gistfile1-txt-LC597" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="file-gistfile1-txt-LC598" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="file-gistfile1-txt-LC599" class="blob-code blob-code-inner js-file-line">#include &lt;string.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="file-gistfile1-txt-LC600" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="file-gistfile1-txt-LC601" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="file-gistfile1-txt-LC602" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="file-gistfile1-txt-LC603" class="blob-code blob-code-inner js-file-line">struct calendar_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="file-gistfile1-txt-LC604" class="blob-code blob-code-inner js-file-line">  int events_count[52];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="file-gistfile1-txt-LC605" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="file-gistfile1-txt-LC606" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="file-gistfile1-txt-LC607" class="blob-code blob-code-inner js-file-line">int* events_per_month(struct calendar_t my_calendar);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="file-gistfile1-txt-LC608" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="file-gistfile1-txt-LC609" class="blob-code blob-code-inner js-file-line">int main(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="file-gistfile1-txt-LC610" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="file-gistfile1-txt-LC611" class="blob-code blob-code-inner js-file-line">  struct calendar_t my_cal;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="file-gistfile1-txt-LC612" class="blob-code blob-code-inner js-file-line">  for (int i = 0, j = 0; i &lt; 52; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="file-gistfile1-txt-LC613" class="blob-code blob-code-inner js-file-line">    my_cal.events_count[i] = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="file-gistfile1-txt-LC614" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="file-gistfile1-txt-LC615" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="file-gistfile1-txt-LC616" class="blob-code blob-code-inner js-file-line">  my_cal.events_count[2] = 76;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="file-gistfile1-txt-LC617" class="blob-code blob-code-inner js-file-line">  my_cal.events_count[3] = 76;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="file-gistfile1-txt-LC618" class="blob-code blob-code-inner js-file-line">  my_cal.events_count[40] = 76;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="file-gistfile1-txt-LC619" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="file-gistfile1-txt-LC620" class="blob-code blob-code-inner js-file-line">  int *all_events;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="file-gistfile1-txt-LC621" class="blob-code blob-code-inner js-file-line">  all_events = events_per_month(my_cal);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="file-gistfile1-txt-LC622" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; 13; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="file-gistfile1-txt-LC623" class="blob-code blob-code-inner js-file-line">    printf(&quot;%d\n&quot;, all_events[i]);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="file-gistfile1-txt-LC624" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="file-gistfile1-txt-LC625" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="file-gistfile1-txt-LC626" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="file-gistfile1-txt-LC627" class="blob-code blob-code-inner js-file-line">int* events_per_month(struct calendar_t my_calendar){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="file-gistfile1-txt-LC628" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="file-gistfile1-txt-LC629" class="blob-code blob-code-inner js-file-line">  int *months = (int*)malloc(13 * sizeof(int));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="file-gistfile1-txt-LC630" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="file-gistfile1-txt-LC631" class="blob-code blob-code-inner js-file-line">  for (int i = 0, j = 0; i &lt; 52; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="file-gistfile1-txt-LC632" class="blob-code blob-code-inner js-file-line">    // printf(&quot;ppppooo %d\n&quot;,my_calendar.events_count[i] );</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="file-gistfile1-txt-LC633" class="blob-code blob-code-inner js-file-line">    months[j] += my_calendar.events_count[i];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="file-gistfile1-txt-LC634" class="blob-code blob-code-inner js-file-line">    if(i%4 == 0){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="file-gistfile1-txt-LC635" class="blob-code blob-code-inner js-file-line">      j++;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="file-gistfile1-txt-LC636" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="file-gistfile1-txt-LC637" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="file-gistfile1-txt-LC638" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="file-gistfile1-txt-LC639" class="blob-code blob-code-inner js-file-line">  return months;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="file-gistfile1-txt-LC640" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="file-gistfile1-txt-LC641" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="file-gistfile1-txt-LC642" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="file-gistfile1-txt-LC643" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="file-gistfile1-txt-LC644" class="blob-code blob-code-inner js-file-line">#include &lt;string.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="file-gistfile1-txt-LC645" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="file-gistfile1-txt-LC646" class="blob-code blob-code-inner js-file-line">struct note_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="file-gistfile1-txt-LC647" class="blob-code blob-code-inner js-file-line">  char text[20];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="file-gistfile1-txt-LC648" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="file-gistfile1-txt-LC649" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="file-gistfile1-txt-LC650" class="blob-code blob-code-inner js-file-line">struct board_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="file-gistfile1-txt-LC651" class="blob-code blob-code-inner js-file-line">  struct note_t notes[10];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="file-gistfile1-txt-LC652" class="blob-code blob-code-inner js-file-line">  int count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="file-gistfile1-txt-LC653" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="file-gistfile1-txt-LC654" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="file-gistfile1-txt-LC655" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="file-gistfile1-txt-LC656" class="blob-code blob-code-inner js-file-line">struct board_t copy_board(struct board_t reference);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="file-gistfile1-txt-LC657" class="blob-code blob-code-inner js-file-line">void filter_board_notes(struct board_t*);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="file-gistfile1-txt-LC658" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="file-gistfile1-txt-LC659" class="blob-code blob-code-inner js-file-line">int main(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="file-gistfile1-txt-LC660" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="file-gistfile1-txt-LC661" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="file-gistfile1-txt-LC662" class="blob-code blob-code-inner js-file-line">  struct board_t original;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="file-gistfile1-txt-LC663" class="blob-code blob-code-inner js-file-line">  strcpy(original.notes[1].text, &quot;dd&quot;);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="file-gistfile1-txt-LC664" class="blob-code blob-code-inner js-file-line">  strcpy(original.notes[2].text, &quot;123456789061234&quot;);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="file-gistfile1-txt-LC665" class="blob-code blob-code-inner js-file-line">  // printf(&quot;%d\n&quot;, strlen(original.notes[2].text) );</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="file-gistfile1-txt-LC666" class="blob-code blob-code-inner js-file-line">  strcpy(original.notes[0].text, &quot;ddee&quot;);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="file-gistfile1-txt-LC667" class="blob-code blob-code-inner js-file-line">  original.count = 3;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="file-gistfile1-txt-LC668" class="blob-code blob-code-inner js-file-line">  struct board_t copied = copy_board(original);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="file-gistfile1-txt-LC669" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="file-gistfile1-txt-LC670" class="blob-code blob-code-inner js-file-line">  printf(&quot;%s\n&quot;, copied.notes[2].text);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="file-gistfile1-txt-LC671" class="blob-code blob-code-inner js-file-line">  filter_board_notes(&amp;copied);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="file-gistfile1-txt-LC672" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="file-gistfile1-txt-LC673" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; copied.count; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="file-gistfile1-txt-LC674" class="blob-code blob-code-inner js-file-line">    printf(&quot;%s\n&quot;, copied.notes[i].text);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="file-gistfile1-txt-LC675" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="file-gistfile1-txt-LC676" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="file-gistfile1-txt-LC677" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="file-gistfile1-txt-LC678" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="file-gistfile1-txt-LC679" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="file-gistfile1-txt-LC680" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="file-gistfile1-txt-LC681" class="blob-code blob-code-inner js-file-line">void filter_board_notes(struct board_t* reference){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="file-gistfile1-txt-LC682" class="blob-code blob-code-inner js-file-line">  int j = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="file-gistfile1-txt-LC683" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; reference-&gt;count ; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="file-gistfile1-txt-LC684" class="blob-code blob-code-inner js-file-line">    if(strlen(reference-&gt;notes[i].text) &gt;= 5 &amp;&amp; strlen(reference-&gt;notes[i].text) &lt;= 15){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="file-gistfile1-txt-LC685" class="blob-code blob-code-inner js-file-line">      strcpy(reference-&gt;notes[j].text, reference-&gt;notes[i].text);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="file-gistfile1-txt-LC686" class="blob-code blob-code-inner js-file-line">      j++;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="file-gistfile1-txt-LC687" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="file-gistfile1-txt-LC688" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="file-gistfile1-txt-LC689" class="blob-code blob-code-inner js-file-line">  reference-&gt;count = j;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="file-gistfile1-txt-LC690" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="file-gistfile1-txt-LC691" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="file-gistfile1-txt-LC692" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="file-gistfile1-txt-LC693" class="blob-code blob-code-inner js-file-line">struct board_t copy_board(struct board_t reference){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="file-gistfile1-txt-LC694" class="blob-code blob-code-inner js-file-line">  struct board_t copied;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="file-gistfile1-txt-LC695" class="blob-code blob-code-inner js-file-line">  copied.count = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="file-gistfile1-txt-LC696" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="file-gistfile1-txt-LC697" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; reference.count; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="file-gistfile1-txt-LC698" class="blob-code blob-code-inner js-file-line">    strcpy(copied.notes[i].text, reference.notes[i].text);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="file-gistfile1-txt-LC699" class="blob-code blob-code-inner js-file-line">    copied.count ++;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="file-gistfile1-txt-LC700" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="file-gistfile1-txt-LC701" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="file-gistfile1-txt-LC702" class="blob-code blob-code-inner js-file-line">  return copied;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="file-gistfile1-txt-LC703" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="file-gistfile1-txt-LC704" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="file-gistfile1-txt-LC705" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="file-gistfile1-txt-LC706" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="file-gistfile1-txt-LC707" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="file-gistfile1-txt-LC708" class="blob-code blob-code-inner js-file-line">#include &lt;string.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="file-gistfile1-txt-LC709" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="file-gistfile1-txt-LC710" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="file-gistfile1-txt-LC711" class="blob-code blob-code-inner js-file-line">struct channel_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="file-gistfile1-txt-LC712" class="blob-code blob-code-inner js-file-line">  int id;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="file-gistfile1-txt-LC713" class="blob-code blob-code-inner js-file-line">  char name[40];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="file-gistfile1-txt-LC714" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="file-gistfile1-txt-LC715" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="file-gistfile1-txt-LC716" class="blob-code blob-code-inner js-file-line">struct tv_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="file-gistfile1-txt-LC717" class="blob-code blob-code-inner js-file-line">  struct channel_t channels[10];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="file-gistfile1-txt-LC718" class="blob-code blob-code-inner js-file-line">  int count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="file-gistfile1-txt-LC719" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="file-gistfile1-txt-LC720" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="file-gistfile1-txt-LC721" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="file-gistfile1-txt-LC722" class="blob-code blob-code-inner js-file-line">struct tv_t sort_by_id(struct tv_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="file-gistfile1-txt-LC723" class="blob-code blob-code-inner js-file-line">void update_or_create(struct tv_t*, int id, char name[40]);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="file-gistfile1-txt-LC724" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="file-gistfile1-txt-LC725" class="blob-code blob-code-inner js-file-line">int main(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="file-gistfile1-txt-LC726" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="file-gistfile1-txt-LC727" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="file-gistfile1-txt-LC728" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="file-gistfile1-txt-LC729" class="blob-code blob-code-inner js-file-line">  struct tv_t original;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="file-gistfile1-txt-LC730" class="blob-code blob-code-inner js-file-line">  strcpy(original.channels[0].name, &quot;SPN&quot;);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="file-gistfile1-txt-LC731" class="blob-code blob-code-inner js-file-line">  strcpy(original.channels[1].name, &quot;Animals&quot;);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="file-gistfile1-txt-LC732" class="blob-code blob-code-inner js-file-line">  strcpy(original.channels[2].name, &quot;MrRobot&quot;);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="file-gistfile1-txt-LC733" class="blob-code blob-code-inner js-file-line">  original.channels[0].id = 8;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="file-gistfile1-txt-LC734" class="blob-code blob-code-inner js-file-line">  original.channels[1].id = 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="file-gistfile1-txt-LC735" class="blob-code blob-code-inner js-file-line">  original.channels[2].id = 2;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="file-gistfile1-txt-LC736" class="blob-code blob-code-inner js-file-line">  original.count = 3;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="file-gistfile1-txt-LC737" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="file-gistfile1-txt-LC738" class="blob-code blob-code-inner js-file-line">  struct tv_t sorted = sort_by_id(original);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="file-gistfile1-txt-LC739" class="blob-code blob-code-inner js-file-line">  // printf(&quot;Opa %s\n&quot;, sorted.channels[2].name);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="file-gistfile1-txt-LC740" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="file-gistfile1-txt-LC741" class="blob-code blob-code-inner js-file-line">  char new_name[20];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="file-gistfile1-txt-LC742" class="blob-code blob-code-inner js-file-line">  strcpy(new_name, &quot;Vampire&quot;);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="file-gistfile1-txt-LC743" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="file-gistfile1-txt-LC744" class="blob-code blob-code-inner js-file-line">  update_or_create(&amp;original, 7, new_name);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="file-gistfile1-txt-LC745" class="blob-code blob-code-inner js-file-line">  // printf(&quot;%d\n&quot;, original.count );</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="file-gistfile1-txt-LC746" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="file-gistfile1-txt-LC747" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; original.count; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="file-gistfile1-txt-LC748" class="blob-code blob-code-inner js-file-line">    printf(&quot;I vytre %s\n&quot;, original.channels[i].name);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="file-gistfile1-txt-LC749" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="file-gistfile1-txt-LC750" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="file-gistfile1-txt-LC751" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="file-gistfile1-txt-LC752" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="file-gistfile1-txt-LC753" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="file-gistfile1-txt-LC754" class="blob-code blob-code-inner js-file-line">  struct tv_t sort_by_id(struct tv_t reference){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="file-gistfile1-txt-LC755" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="file-gistfile1-txt-LC756" class="blob-code blob-code-inner js-file-line">    struct channel_t temp;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="file-gistfile1-txt-LC757" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="file-gistfile1-txt-LC758" class="blob-code blob-code-inner js-file-line">    for (int i = 0; i &lt; reference.count ; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="file-gistfile1-txt-LC759" class="blob-code blob-code-inner js-file-line">      for (int j = i; j &lt; reference.count; ++j){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="file-gistfile1-txt-LC760" class="blob-code blob-code-inner js-file-line">        if(reference.channels[j].id &gt; reference.channels[j+1].id){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="file-gistfile1-txt-LC761" class="blob-code blob-code-inner js-file-line">          temp = reference.channels[j+1];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="file-gistfile1-txt-LC762" class="blob-code blob-code-inner js-file-line">          reference.channels[j+1] = reference.channels[j];</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="file-gistfile1-txt-LC763" class="blob-code blob-code-inner js-file-line">          reference.channels[j] = temp;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="file-gistfile1-txt-LC764" class="blob-code blob-code-inner js-file-line">         }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="file-gistfile1-txt-LC765" class="blob-code blob-code-inner js-file-line">      }      </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="file-gistfile1-txt-LC766" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="file-gistfile1-txt-LC767" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="file-gistfile1-txt-LC768" class="blob-code blob-code-inner js-file-line">    return reference;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="file-gistfile1-txt-LC769" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="file-gistfile1-txt-LC770" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="file-gistfile1-txt-LC771" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="file-gistfile1-txt-LC772" class="blob-code blob-code-inner js-file-line">  void update_or_create(struct tv_t *reference, int id, char name[40]){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="file-gistfile1-txt-LC773" class="blob-code blob-code-inner js-file-line">    int is_empty = 1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="file-gistfile1-txt-LC774" class="blob-code blob-code-inner js-file-line">      for (int i = 0; i &lt; reference-&gt;count; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="file-gistfile1-txt-LC775" class="blob-code blob-code-inner js-file-line">        if (reference-&gt;channels[i].id == id){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="file-gistfile1-txt-LC776" class="blob-code blob-code-inner js-file-line">          strcpy(reference-&gt;channels[i].name, name);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="file-gistfile1-txt-LC777" class="blob-code blob-code-inner js-file-line">          is_empty = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="file-gistfile1-txt-LC778" class="blob-code blob-code-inner js-file-line">          return;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="file-gistfile1-txt-LC779" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="file-gistfile1-txt-LC780" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="file-gistfile1-txt-LC781" class="blob-code blob-code-inner js-file-line">      if(is_empty == 1){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="file-gistfile1-txt-LC782" class="blob-code blob-code-inner js-file-line">        strcpy(reference-&gt;channels[reference-&gt;count].name, name);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="file-gistfile1-txt-LC783" class="blob-code blob-code-inner js-file-line">        reference-&gt;channels[reference-&gt;count].id = id;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="file-gistfile1-txt-LC784" class="blob-code blob-code-inner js-file-line">        reference-&gt;count ++;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="file-gistfile1-txt-LC785" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="file-gistfile1-txt-LC786" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="file-gistfile1-txt-LC787" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="file-gistfile1-txt-LC788" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="file-gistfile1-txt-LC789" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="file-gistfile1-txt-LC790" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="file-gistfile1-txt-LC791" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="file-gistfile1-txt-LC792" class="blob-code blob-code-inner js-file-line">#include &lt;stdio.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="file-gistfile1-txt-LC793" class="blob-code blob-code-inner js-file-line">#include &lt;stdlib.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="file-gistfile1-txt-LC794" class="blob-code blob-code-inner js-file-line">#include &lt;string.h&gt;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="file-gistfile1-txt-LC795" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="file-gistfile1-txt-LC796" class="blob-code blob-code-inner js-file-line">struct node_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="file-gistfile1-txt-LC797" class="blob-code blob-code-inner js-file-line">  int value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="file-gistfile1-txt-LC798" class="blob-code blob-code-inner js-file-line">  struct node_t *next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="file-gistfile1-txt-LC799" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="file-gistfile1-txt-LC800" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="file-gistfile1-txt-LC801" class="blob-code blob-code-inner js-file-line">struct list_t{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="file-gistfile1-txt-LC802" class="blob-code blob-code-inner js-file-line">  struct node_t *head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="file-gistfile1-txt-LC803" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="file-gistfile1-txt-LC804" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="file-gistfile1-txt-LC805" class="blob-code blob-code-inner js-file-line">/////////4</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="file-gistfile1-txt-LC806" class="blob-code blob-code-inner js-file-line">int count(struct list_t);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="file-gistfile1-txt-LC807" class="blob-code blob-code-inner js-file-line">struct node_t *create(int element);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="file-gistfile1-txt-LC808" class="blob-code blob-code-inner js-file-line">struct node_t *get_nth(struct list_t my_list, int index);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="file-gistfile1-txt-LC809" class="blob-code blob-code-inner js-file-line">void swap(struct list_t, int, int);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="file-gistfile1-txt-LC810" class="blob-code blob-code-inner js-file-line">void reverse(struct list_t *my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="file-gistfile1-txt-LC811" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="file-gistfile1-txt-LC812" class="blob-code blob-code-inner js-file-line">int main(){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="file-gistfile1-txt-LC813" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="file-gistfile1-txt-LC814" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="file-gistfile1-txt-LC815" class="blob-code blob-code-inner js-file-line">  struct list_t my_list;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="file-gistfile1-txt-LC816" class="blob-code blob-code-inner js-file-line">  struct node_t *n = create(3);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="file-gistfile1-txt-LC817" class="blob-code blob-code-inner js-file-line">  struct node_t *n1 = create(4);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="file-gistfile1-txt-LC818" class="blob-code blob-code-inner js-file-line">  struct node_t *n2 = create(5);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="file-gistfile1-txt-LC819" class="blob-code blob-code-inner js-file-line">  struct node_t *n3 = create(77);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="file-gistfile1-txt-LC820" class="blob-code blob-code-inner js-file-line">  struct node_t *n4 = create(8);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="file-gistfile1-txt-LC821" class="blob-code blob-code-inner js-file-line">  my_list.head = n;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="file-gistfile1-txt-LC822" class="blob-code blob-code-inner js-file-line">  my_list.head-&gt;next = n1;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="file-gistfile1-txt-LC823" class="blob-code blob-code-inner js-file-line">  my_list.head-&gt;next-&gt;next = n2;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="file-gistfile1-txt-LC824" class="blob-code blob-code-inner js-file-line">  my_list.head-&gt;next-&gt;next-&gt;next = n3;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="file-gistfile1-txt-LC825" class="blob-code blob-code-inner js-file-line">  my_list.head-&gt;next-&gt;next-&gt;next-&gt;next = n4;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="file-gistfile1-txt-LC826" class="blob-code blob-code-inner js-file-line">  printf(&quot;Number of elements: %d\n&quot;, count(my_list));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="file-gistfile1-txt-LC827" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="file-gistfile1-txt-LC828" class="blob-code blob-code-inner js-file-line">  struct node_t *element = get_nth(my_list,1);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="file-gistfile1-txt-LC829" class="blob-code blob-code-inner js-file-line">  printf(&quot;Element with index: %d\n&quot;, element-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="file-gistfile1-txt-LC830" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="file-gistfile1-txt-LC831" class="blob-code blob-code-inner js-file-line">  // swap(my_list, 0, 3);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="file-gistfile1-txt-LC832" class="blob-code blob-code-inner js-file-line">  reverse(&amp;my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="file-gistfile1-txt-LC833" class="blob-code blob-code-inner js-file-line">  printf(&quot;Changed index: %d\n&quot;, my_list.head-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="file-gistfile1-txt-LC834" class="blob-code blob-code-inner js-file-line">  printf(&quot;Changed index: %d\n&quot;, my_list.head-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="file-gistfile1-txt-LC835" class="blob-code blob-code-inner js-file-line">  printf(&quot;Changed index: %d\n&quot;, my_list.head-&gt;next-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="file-gistfile1-txt-LC836" class="blob-code blob-code-inner js-file-line">  printf(&quot;Changed index: %d\n&quot;, my_list.head-&gt;next-&gt;next-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="file-gistfile1-txt-LC837" class="blob-code blob-code-inner js-file-line">  printf(&quot;Changed index: %d\n&quot;, my_list.head-&gt;next-&gt;next-&gt;next-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="file-gistfile1-txt-LC838" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="file-gistfile1-txt-LC839" class="blob-code blob-code-inner js-file-line">  struct node_t *current = my_list.head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="file-gistfile1-txt-LC840" class="blob-code blob-code-inner js-file-line">  // while( current != NULL){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="file-gistfile1-txt-LC841" class="blob-code blob-code-inner js-file-line">  //   current = current-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="file-gistfile1-txt-LC842" class="blob-code blob-code-inner js-file-line">  //   printf(&quot;Changed index: %d\n&quot;, current);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="file-gistfile1-txt-LC843" class="blob-code blob-code-inner js-file-line">  // }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="file-gistfile1-txt-LC844" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="file-gistfile1-txt-LC845" class="blob-code blob-code-inner js-file-line">  return 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="file-gistfile1-txt-LC846" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="file-gistfile1-txt-LC847" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="file-gistfile1-txt-LC848" class="blob-code blob-code-inner js-file-line">void reverse(struct list_t *my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="file-gistfile1-txt-LC849" class="blob-code blob-code-inner js-file-line">int size = count(*my_list);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="file-gistfile1-txt-LC850" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; size; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="file-gistfile1-txt-LC851" class="blob-code blob-code-inner js-file-line">    for (int j = 0; j &lt; (size - i - 1); ++j){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="file-gistfile1-txt-LC852" class="blob-code blob-code-inner js-file-line">      swap(*my_list, j, j+1);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="file-gistfile1-txt-LC853" class="blob-code blob-code-inner js-file-line">    }    </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="file-gistfile1-txt-LC854" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="file-gistfile1-txt-LC855" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="file-gistfile1-txt-LC856" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="file-gistfile1-txt-LC857" class="blob-code blob-code-inner js-file-line">void swap(struct list_t my_list, int index1, int index2){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="file-gistfile1-txt-LC858" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="file-gistfile1-txt-LC859" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="file-gistfile1-txt-LC860" class="blob-code blob-code-inner js-file-line">  struct node_t *first = get_nth(my_list, index1);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="file-gistfile1-txt-LC861" class="blob-code blob-code-inner js-file-line">  struct node_t *second = get_nth(my_list, index2);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="file-gistfile1-txt-LC862" class="blob-code blob-code-inner js-file-line">  int temp = first-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="file-gistfile1-txt-LC863" class="blob-code blob-code-inner js-file-line">  first-&gt;value = second-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="file-gistfile1-txt-LC864" class="blob-code blob-code-inner js-file-line">  second-&gt;value = temp;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="file-gistfile1-txt-LC865" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="file-gistfile1-txt-LC866" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="file-gistfile1-txt-LC867" class="blob-code blob-code-inner js-file-line">  // struct node_t *first = get_nth(my_list, index1);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="file-gistfile1-txt-LC868" class="blob-code blob-code-inner js-file-line">  // struct node_t *second = get_nth(my_list, index2);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="file-gistfile1-txt-LC869" class="blob-code blob-code-inner js-file-line">  // struct node_t *previous2 = get_nth(my_list, index2-1);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="file-gistfile1-txt-LC870" class="blob-code blob-code-inner js-file-line">  // struct node_t *first_next = first-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="file-gistfile1-txt-LC871" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="file-gistfile1-txt-LC872" class="blob-code blob-code-inner js-file-line">  // if(index2-1 != index1){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="file-gistfile1-txt-LC873" class="blob-code blob-code-inner js-file-line">  //   if(index1 == 0){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="file-gistfile1-txt-LC874" class="blob-code blob-code-inner js-file-line">  //     my_list.head = second;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="file-gistfile1-txt-LC875" class="blob-code blob-code-inner js-file-line">  //   }else{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="file-gistfile1-txt-LC876" class="blob-code blob-code-inner js-file-line">  //     struct node_t *previous1 = get_nth(my_list, index1-1); </td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="file-gistfile1-txt-LC877" class="blob-code blob-code-inner js-file-line">  //     previous1-&gt;next = second;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="file-gistfile1-txt-LC878" class="blob-code blob-code-inner js-file-line">  //   }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="file-gistfile1-txt-LC879" class="blob-code blob-code-inner js-file-line">  //   previous2-&gt;next = first;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="file-gistfile1-txt-LC880" class="blob-code blob-code-inner js-file-line">  //   first-&gt;next = second-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="file-gistfile1-txt-LC881" class="blob-code blob-code-inner js-file-line">  //   second-&gt;next = first_next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="file-gistfile1-txt-LC882" class="blob-code blob-code-inner js-file-line">  // }else{</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="file-gistfile1-txt-LC883" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="file-gistfile1-txt-LC884" class="blob-code blob-code-inner js-file-line">  // printf(&quot;%d\n&quot;, first-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="file-gistfile1-txt-LC885" class="blob-code blob-code-inner js-file-line">  // printf(&quot;%d\n&quot;, second-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="file-gistfile1-txt-LC886" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="file-gistfile1-txt-LC887" class="blob-code blob-code-inner js-file-line">  // }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="file-gistfile1-txt-LC888" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="file-gistfile1-txt-LC889" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="file-gistfile1-txt-LC890" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="file-gistfile1-txt-LC891" class="blob-code blob-code-inner js-file-line">struct node_t *get_nth(struct list_t my_list, int index){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="file-gistfile1-txt-LC892" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="file-gistfile1-txt-LC893" class="blob-code blob-code-inner js-file-line">  struct node_t *current = my_list.head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="file-gistfile1-txt-LC894" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="file-gistfile1-txt-LC895" class="blob-code blob-code-inner js-file-line">  for (int i = 0; i &lt; index; ++i){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="file-gistfile1-txt-LC896" class="blob-code blob-code-inner js-file-line">    current = current-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="file-gistfile1-txt-LC897" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="file-gistfile1-txt-LC898" class="blob-code blob-code-inner js-file-line">  return current;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="file-gistfile1-txt-LC899" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="file-gistfile1-txt-LC900" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="file-gistfile1-txt-LC901" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="file-gistfile1-txt-LC902" class="blob-code blob-code-inner js-file-line">int count(struct list_t my_list){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="file-gistfile1-txt-LC903" class="blob-code blob-code-inner js-file-line">  struct node_t *current = my_list.head;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="file-gistfile1-txt-LC904" class="blob-code blob-code-inner js-file-line">  int count = 0;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="file-gistfile1-txt-LC905" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="file-gistfile1-txt-LC906" class="blob-code blob-code-inner js-file-line">  while( current != NULL){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="file-gistfile1-txt-LC907" class="blob-code blob-code-inner js-file-line">    current = current-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="file-gistfile1-txt-LC908" class="blob-code blob-code-inner js-file-line">    count ++;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="file-gistfile1-txt-LC909" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="file-gistfile1-txt-LC910" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="file-gistfile1-txt-LC911" class="blob-code blob-code-inner js-file-line">  return count;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="file-gistfile1-txt-LC912" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="file-gistfile1-txt-LC913" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="file-gistfile1-txt-LC914" class="blob-code blob-code-inner js-file-line">//////////////</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="file-gistfile1-txt-LC915" class="blob-code blob-code-inner js-file-line">struct node_t *create(int element){</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="file-gistfile1-txt-LC916" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="file-gistfile1-txt-LC917" class="blob-code blob-code-inner js-file-line">  struct node_t *new_el = (struct node_t*)malloc(sizeof(struct node_t));</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="file-gistfile1-txt-LC918" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="file-gistfile1-txt-LC919" class="blob-code blob-code-inner js-file-line">  new_el-&gt;value = element;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="file-gistfile1-txt-LC920" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = NULL;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="file-gistfile1-txt-LC921" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="file-gistfile1-txt-LC922" class="blob-code blob-code-inner js-file-line">  return new_el;</td>
      </tr>
      <tr>
        <td id="file-gistfile1-txt-L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="file-gistfile1-txt-LC923" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-include-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/include.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-include-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              include.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-include-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-include-c-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-include-c-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-include-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-include-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-include-c-LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-include-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-include-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-include-c-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span>{</td>
      </tr>
      <tr>
        <td id="file-include-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-include-c-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> value;</td>
      </tr>
      <tr>
        <td id="file-include-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-include-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-include-c-LC9" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-include-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-include-c-LC10" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-include-c-LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">list_t</span>{</td>
      </tr>
      <tr>
        <td id="file-include-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-include-c-LC12" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-include-c-LC13" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> size;</td>
      </tr>
      <tr>
        <td id="file-include-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-include-c-LC14" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-include-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-include-c-LC15" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-include-c-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> struct list_t{</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-include-c-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   struct list_t *list;</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-include-c-LC18" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-include-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-include-c-LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> };</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-include-c-LC20" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-include-c-LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">create</span>(<span class="pl-k">int</span> element);</td>
      </tr>
      <tr>
        <td id="file-include-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-include-c-LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/BASIC</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-include-c-LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert_bef</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> element);</td>
      </tr>
      <tr>
        <td id="file-include-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-include-c-LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_bef</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list);</td>
      </tr>
      <tr>
        <td id="file-include-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-include-c-LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert_af</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> element, <span class="pl-k">int</span> index);</td>
      </tr>
      <tr>
        <td id="file-include-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-include-c-LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_af</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> index);</td>
      </tr>
      <tr>
        <td id="file-include-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-include-c-LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">get</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> index);</td>
      </tr>
      <tr>
        <td id="file-include-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-include-c-LC28" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-include-c-LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>2nd SLIDE</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-include-c-LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">list_t</span> <span class="pl-en">init_list</span>();</td>
      </tr>
      <tr>
        <td id="file-include-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-include-c-LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">destroy_list</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list);</td>
      </tr>
      <tr>
        <td id="file-include-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-include-c-LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">size_stack</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list);</td>
      </tr>
      <tr>
        <td id="file-include-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-include-c-LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">is_empty</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list);</td>
      </tr>
      <tr>
        <td id="file-include-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-include-c-LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">top</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> my_list);</td>
      </tr>
      <tr>
        <td id="file-include-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-include-c-LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">list_t</span> <span class="pl-en">copy</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list);</td>
      </tr>
      <tr>
        <td id="file-include-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-include-c-LC36" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-include-c-LC37" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-include-c-LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){</td>
      </tr>
      <tr>
        <td id="file-include-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-include-c-LC39" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-include-c-LC40" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">list_t</span> l;</td>
      </tr>
      <tr>
        <td id="file-include-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-include-c-LC41" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *n = <span class="pl-c1">create</span>(<span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="file-include-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-include-c-LC42" class="blob-code blob-code-inner js-file-line">  l.<span class="pl-smi">head</span> = n;</td>
      </tr>
      <tr>
        <td id="file-include-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-include-c-LC43" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">insert_bef</span>(&amp;l, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="file-include-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-include-c-LC44" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">insert_af</span>(&amp;l, <span class="pl-c1">11</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="file-include-c-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-include-c-LC45" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> remove_bef(&amp;l);</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-include-c-LC46" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> remove_af(&amp;l, 0);</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-include-c-LC47" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">list_t</span> new_list = <span class="pl-c1">copy</span>(&amp;l);</td>
      </tr>
      <tr>
        <td id="file-include-c-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-include-c-LC48" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-include-c-LC49" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, <span class="pl-c1">get</span>(&amp;new_list, <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="file-include-c-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-include-c-LC50" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%d</span> <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, <span class="pl-c1">get</span>(&amp;l, <span class="pl-c1">0</span>), <span class="pl-c1">top</span>(l));</td>
      </tr>
      <tr>
        <td id="file-include-c-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-include-c-LC51" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;%d %d %d\n&quot;, l.head-&gt;value, l.head-&gt;next-&gt;value, l.head-&gt;next-&gt;next-&gt;value);</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-include-c-LC52" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-include-c-LC53" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-include-c-LC54" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-include-c-LC55" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-include-c-LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">top</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> my_list){</td>
      </tr>
      <tr>
        <td id="file-include-c-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-include-c-LC57" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> my_list.<span class="pl-smi">head</span>-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-include-c-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-include-c-LC58" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-include-c-LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">list_t</span> <span class="pl-en">copy</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list){</td>
      </tr>
      <tr>
        <td id="file-include-c-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-include-c-LC60" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-include-c-LC61" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">list_t</span> new_list = <span class="pl-c1">init_list</span>();</td>
      </tr>
      <tr>
        <td id="file-include-c-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-include-c-LC62" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *current_node = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-include-c-LC63" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *new_node;</td>
      </tr>
      <tr>
        <td id="file-include-c-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-include-c-LC64" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *previous_node;</td>
      </tr>
      <tr>
        <td id="file-include-c-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-include-c-LC65" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-include-c-LC66" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span> (current_node != <span class="pl-c1">NULL</span>){</td>
      </tr>
      <tr>
        <td id="file-include-c-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-include-c-LC67" class="blob-code blob-code-inner js-file-line">    new_node = <span class="pl-c1">create</span>(current_node-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-include-c-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-include-c-LC68" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(new_list.<span class="pl-smi">head</span> == <span class="pl-c1">NULL</span>){</td>
      </tr>
      <tr>
        <td id="file-include-c-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-include-c-LC69" class="blob-code blob-code-inner js-file-line">      new_list.<span class="pl-smi">head</span> = new_node;</td>
      </tr>
      <tr>
        <td id="file-include-c-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-include-c-LC70" class="blob-code blob-code-inner js-file-line">    }<span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="file-include-c-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-include-c-LC71" class="blob-code blob-code-inner js-file-line">      previous_node-&gt;next = new_node;</td>
      </tr>
      <tr>
        <td id="file-include-c-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-include-c-LC72" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-include-c-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-include-c-LC73" class="blob-code blob-code-inner js-file-line">    previous_node = new_node;</td>
      </tr>
      <tr>
        <td id="file-include-c-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-include-c-LC74" class="blob-code blob-code-inner js-file-line">    current_node = current_node-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-include-c-LC75" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-include-c-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-include-c-LC76" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-include-c-LC77" class="blob-code blob-code-inner js-file-line">  new_list.<span class="pl-smi">size</span> = my_list-&gt;size;</td>
      </tr>
      <tr>
        <td id="file-include-c-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-include-c-LC78" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-include-c-LC79" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> new_list;</td>
      </tr>
      <tr>
        <td id="file-include-c-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-include-c-LC80" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-include-c-LC81" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-include-c-LC82" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-include-c-LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">is_empty</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list){</td>
      </tr>
      <tr>
        <td id="file-include-c-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-include-c-LC84" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(my_list-&gt;size == <span class="pl-c1">0</span>){  </td>
      </tr>
      <tr>
        <td id="file-include-c-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-include-c-LC85" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-include-c-LC86" class="blob-code blob-code-inner js-file-line">  }<span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="file-include-c-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-include-c-LC87" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-include-c-LC88" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-include-c-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-include-c-LC89" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-include-c-LC90" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-include-c-LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">size_stack</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list){</td>
      </tr>
      <tr>
        <td id="file-include-c-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-include-c-LC92" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> my_list-&gt;size;</td>
      </tr>
      <tr>
        <td id="file-include-c-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-include-c-LC93" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-include-c-LC94" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="file-include-c-LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">destroy_list</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list){</td>
      </tr>
      <tr>
        <td id="file-include-c-L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="file-include-c-LC96" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="file-include-c-LC97" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="file-include-c-LC98" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span>(find-&gt;next != <span class="pl-c1">NULL</span>){</td>
      </tr>
      <tr>
        <td id="file-include-c-L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="file-include-c-LC99" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *trash = find;</td>
      </tr>
      <tr>
        <td id="file-include-c-L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="file-include-c-LC100" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="file-include-c-LC101" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(trash);</td>
      </tr>
      <tr>
        <td id="file-include-c-L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="file-include-c-LC102" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-include-c-L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="file-include-c-LC103" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">free</span>(find);</td>
      </tr>
      <tr>
        <td id="file-include-c-L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="file-include-c-LC104" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="file-include-c-LC105" class="blob-code blob-code-inner js-file-line">  my_list-&gt;head = <span class="pl-c1">NULL</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="file-include-c-LC106" class="blob-code blob-code-inner js-file-line">  my_list-&gt;size = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="file-include-c-LC107" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">free</span>(my_list);</td>
      </tr>
      <tr>
        <td id="file-include-c-L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="file-include-c-LC108" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-include-c-L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="file-include-c-LC109" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="file-include-c-LC110" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="file-include-c-LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">list_t</span> <span class="pl-en">init_list</span>(){</td>
      </tr>
      <tr>
        <td id="file-include-c-L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="file-include-c-LC112" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="file-include-c-LC113" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">list_t</span> new_list;</td>
      </tr>
      <tr>
        <td id="file-include-c-L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="file-include-c-LC114" class="blob-code blob-code-inner js-file-line">  new_list.<span class="pl-smi">head</span> = <span class="pl-c1">NULL</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="file-include-c-LC115" class="blob-code blob-code-inner js-file-line">  new_list.<span class="pl-smi">size</span> = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="file-include-c-LC116" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="file-include-c-LC117" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> new_list;</td>
      </tr>
      <tr>
        <td id="file-include-c-L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="file-include-c-LC118" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="file-include-c-LC119" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="file-include-c-LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">get</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> index){</td>
      </tr>
      <tr>
        <td id="file-include-c-L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="file-include-c-LC121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="file-include-c-LC122" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="file-include-c-LC123" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="file-include-c-LC124" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">index</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-include-c-L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="file-include-c-LC125" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span>(find == <span class="pl-c1">NULL</span>){</td>
      </tr>
      <tr>
        <td id="file-include-c-L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="file-include-c-LC126" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="file-include-c-LC127" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-include-c-L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="file-include-c-LC128" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="file-include-c-LC129" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-include-c-L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="file-include-c-LC130" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> find-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-include-c-L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="file-include-c-LC131" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="file-include-c-LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_af</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> index){</td>
      </tr>
      <tr>
        <td id="file-include-c-L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="file-include-c-LC133" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="file-include-c-LC134" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="file-include-c-LC135" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="file-include-c-LC136" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">index</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-include-c-L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="file-include-c-LC137" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="file-include-c-LC138" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-include-c-L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="file-include-c-LC139" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *trash = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="file-include-c-LC140" class="blob-code blob-code-inner js-file-line">  find-&gt;next = find-&gt;next-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="file-include-c-LC141" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">free</span>(trash);</td>
      </tr>
      <tr>
        <td id="file-include-c-L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="file-include-c-LC142" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="file-include-c-LC143" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="file-include-c-LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert_af</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> element, <span class="pl-k">int</span> index){</td>
      </tr>
      <tr>
        <td id="file-include-c-L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="file-include-c-LC145" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="file-include-c-LC146" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *find = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="file-include-c-LC147" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="file-include-c-LC148" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">index</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-include-c-L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="file-include-c-LC149" class="blob-code blob-code-inner js-file-line">    find = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="file-include-c-LC150" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-include-c-L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="file-include-c-LC151" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="file-include-c-LC152" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *new_el = <span class="pl-c1">create</span>(element);</td>
      </tr>
      <tr>
        <td id="file-include-c-L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="file-include-c-LC153" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = find-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="file-include-c-LC154" class="blob-code blob-code-inner js-file-line">  find-&gt;next = new_el;</td>
      </tr>
      <tr>
        <td id="file-include-c-L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="file-include-c-LC155" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="file-include-c-LC156" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="file-include-c-LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_bef</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list){</td>
      </tr>
      <tr>
        <td id="file-include-c-L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="file-include-c-LC158" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="file-include-c-LC159" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *first = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="file-include-c-LC160" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="file-include-c-LC161" class="blob-code blob-code-inner js-file-line">  my_list-&gt;head = my_list-&gt;head-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-include-c-L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="file-include-c-LC162" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>Za da pochistim pametta ot stariq head</span></td>
      </tr>
      <tr>
        <td id="file-include-c-L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="file-include-c-LC163" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">free</span>(first);</td>
      </tr>
      <tr>
        <td id="file-include-c-L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="file-include-c-LC164" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="file-include-c-LC165" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="file-include-c-LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert_bef</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list, <span class="pl-k">int</span> element){</td>
      </tr>
      <tr>
        <td id="file-include-c-L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="file-include-c-LC167" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *new_el = <span class="pl-c1">create</span>(element);</td>
      </tr>
      <tr>
        <td id="file-include-c-L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="file-include-c-LC168" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="file-include-c-LC169" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = my_list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-include-c-L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="file-include-c-LC170" class="blob-code blob-code-inner js-file-line">  my_list-&gt;head = new_el;</td>
      </tr>
      <tr>
        <td id="file-include-c-L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="file-include-c-LC171" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="file-include-c-LC172" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-include-c-L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="file-include-c-LC173" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="file-include-c-LC174" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">create</span>(<span class="pl-k">int</span> element){</td>
      </tr>
      <tr>
        <td id="file-include-c-L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="file-include-c-LC175" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="file-include-c-LC176" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *new_el = (<span class="pl-k">struct</span> <span class="pl-c1">node_t</span>*)<span class="pl-c1">malloc</span>(<span class="pl-k">sizeof</span>(<span class="pl-k">struct</span> <span class="pl-c1">node_t</span>));</td>
      </tr>
      <tr>
        <td id="file-include-c-L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="file-include-c-LC177" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="file-include-c-LC178" class="blob-code blob-code-inner js-file-line">  new_el-&gt;value = element;</td>
      </tr>
      <tr>
        <td id="file-include-c-L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="file-include-c-LC179" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = <span class="pl-c1">NULL</span>;</td>
      </tr>
      <tr>
        <td id="file-include-c-L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="file-include-c-LC180" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-include-c-L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="file-include-c-LC181" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> new_el;</td>
      </tr>
      <tr>
        <td id="file-include-c-L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="file-include-c-LC182" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-kontrolno-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/kontrolno.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-kontrolno-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              kontrolno.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-kontrolno-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-kontrolno-c-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-kontrolno-c-LC2" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-kontrolno-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-kontrolno-c-LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-kontrolno-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-kontrolno-c-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span>{</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-kontrolno-c-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> value;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-kontrolno-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *next;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-kontrolno-c-LC9" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-kontrolno-c-LC10" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-kontrolno-c-LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">list_t</span>{</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-kontrolno-c-LC12" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *head;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-kontrolno-c-LC13" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-kontrolno-c-LC14" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-kontrolno-c-LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>///////4</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-kontrolno-c-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">count</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-kontrolno-c-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">create</span>(<span class="pl-k">int</span> element);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-kontrolno-c-LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">get_nth</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> my_list, <span class="pl-k">int</span> index);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-kontrolno-c-LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">swap</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>, <span class="pl-k">int</span>, <span class="pl-k">int</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-kontrolno-c-LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">reverse</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-kontrolno-c-LC21" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-kontrolno-c-LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-kontrolno-c-LC23" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-kontrolno-c-LC24" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-kontrolno-c-LC25" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">list_t</span> my_list;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-kontrolno-c-LC26" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *n = <span class="pl-c1">create</span>(<span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-kontrolno-c-LC27" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *n1 = <span class="pl-c1">create</span>(<span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-kontrolno-c-LC28" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *n2 = <span class="pl-c1">create</span>(<span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-kontrolno-c-LC29" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *n3 = <span class="pl-c1">create</span>(<span class="pl-c1">77</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-kontrolno-c-LC30" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *n4 = <span class="pl-c1">create</span>(<span class="pl-c1">8</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-kontrolno-c-LC31" class="blob-code blob-code-inner js-file-line">  my_list.<span class="pl-smi">head</span> = n;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-kontrolno-c-LC32" class="blob-code blob-code-inner js-file-line">  my_list.<span class="pl-smi">head</span>-&gt;next = n1;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-kontrolno-c-LC33" class="blob-code blob-code-inner js-file-line">  my_list.<span class="pl-smi">head</span>-&gt;next-&gt;next = n2;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-kontrolno-c-LC34" class="blob-code blob-code-inner js-file-line">  my_list.<span class="pl-smi">head</span>-&gt;next-&gt;next-&gt;next = n3;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-kontrolno-c-LC35" class="blob-code blob-code-inner js-file-line">  my_list.<span class="pl-smi">head</span>-&gt;next-&gt;next-&gt;next-&gt;next = n4;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-kontrolno-c-LC36" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Number of elements: <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, <span class="pl-c1">count</span>(my_list));</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-kontrolno-c-LC37" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-kontrolno-c-LC38" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *element = <span class="pl-c1">get_nth</span>(my_list,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-kontrolno-c-LC39" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Element with index: <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, element-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-kontrolno-c-LC40" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-kontrolno-c-LC41" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> swap(my_list, 0, 3);</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-kontrolno-c-LC42" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">reverse</span>(&amp;my_list);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-kontrolno-c-LC43" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Changed index: <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, my_list.<span class="pl-smi">head</span>-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-kontrolno-c-LC44" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Changed index: <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, my_list.<span class="pl-smi">head</span>-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-kontrolno-c-LC45" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Changed index: <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, my_list.<span class="pl-smi">head</span>-&gt;next-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-kontrolno-c-LC46" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Changed index: <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, my_list.<span class="pl-smi">head</span>-&gt;next-&gt;next-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-kontrolno-c-LC47" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Changed index: <span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, my_list.<span class="pl-smi">head</span>-&gt;next-&gt;next-&gt;next-&gt;next-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-kontrolno-c-LC48" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-kontrolno-c-LC49" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *current = my_list.<span class="pl-smi">head</span>;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-kontrolno-c-LC50" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> while( current != NULL){</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-kontrolno-c-LC51" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   current = current-&gt;next;</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-kontrolno-c-LC52" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   printf(&quot;Changed index: %d\n&quot;, current);</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-kontrolno-c-LC53" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> }</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-kontrolno-c-LC54" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-kontrolno-c-LC55" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-kontrolno-c-LC56" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-kontrolno-c-LC57" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-kontrolno-c-LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">reverse</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *my_list){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-kontrolno-c-LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> size = <span class="pl-c1">count</span>(*my_list);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-kontrolno-c-LC60" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; size; ++i){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-kontrolno-c-LC61" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">int</span> j = <span class="pl-c1">0</span>; j &lt; (size - i - <span class="pl-c1">1</span>); ++j){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-kontrolno-c-LC62" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">swap</span>(*my_list, j, j+<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-kontrolno-c-LC63" class="blob-code blob-code-inner js-file-line">    }    </td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-kontrolno-c-LC64" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-kontrolno-c-LC65" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-kontrolno-c-LC66" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-kontrolno-c-LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">swap</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> my_list, <span class="pl-k">int</span> index1, <span class="pl-k">int</span> index2){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-kontrolno-c-LC68" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-kontrolno-c-LC69" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-kontrolno-c-LC70" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *first = <span class="pl-c1">get_nth</span>(my_list, index1);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-kontrolno-c-LC71" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *second = <span class="pl-c1">get_nth</span>(my_list, index2);</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-kontrolno-c-LC72" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> temp = first-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-kontrolno-c-LC73" class="blob-code blob-code-inner js-file-line">  first-&gt;value = second-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-kontrolno-c-LC74" class="blob-code blob-code-inner js-file-line">  second-&gt;value = temp;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-kontrolno-c-LC75" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-kontrolno-c-LC76" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-kontrolno-c-LC77" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> struct node_t *first = get_nth(my_list, index1);</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-kontrolno-c-LC78" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> struct node_t *second = get_nth(my_list, index2);</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-kontrolno-c-LC79" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> struct node_t *previous2 = get_nth(my_list, index2-1);</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-kontrolno-c-LC80" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> struct node_t *first_next = first-&gt;next;</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-kontrolno-c-LC81" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-kontrolno-c-LC82" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> if(index2-1 != index1){</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-kontrolno-c-LC83" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   if(index1 == 0){</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-kontrolno-c-LC84" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>     my_list.head = second;</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-kontrolno-c-LC85" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   }else{</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-kontrolno-c-LC86" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>     struct node_t *previous1 = get_nth(my_list, index1-1); </span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-kontrolno-c-LC87" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>     previous1-&gt;next = second;</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-kontrolno-c-LC88" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   }</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-kontrolno-c-LC89" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   previous2-&gt;next = first;</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-kontrolno-c-LC90" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   first-&gt;next = second-&gt;next;</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-kontrolno-c-LC91" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>   second-&gt;next = first_next;</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-kontrolno-c-LC92" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> }else{</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-kontrolno-c-LC93" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-kontrolno-c-LC94" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;%d\n&quot;, first-&gt;value);</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="file-kontrolno-c-LC95" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;%d\n&quot;, second-&gt;value);</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="file-kontrolno-c-LC96" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="file-kontrolno-c-LC97" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> }</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="file-kontrolno-c-LC98" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="file-kontrolno-c-LC99" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="file-kontrolno-c-LC100" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="file-kontrolno-c-LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">get_nth</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> my_list, <span class="pl-k">int</span> index){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="file-kontrolno-c-LC102" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="file-kontrolno-c-LC103" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *current = my_list.<span class="pl-smi">head</span>;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="file-kontrolno-c-LC104" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="file-kontrolno-c-LC105" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">index</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="file-kontrolno-c-LC106" class="blob-code blob-code-inner js-file-line">    current = current-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="file-kontrolno-c-LC107" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="file-kontrolno-c-LC108" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> current;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="file-kontrolno-c-LC109" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="file-kontrolno-c-LC110" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="file-kontrolno-c-LC111" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="file-kontrolno-c-LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">count</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> my_list){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="file-kontrolno-c-LC113" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *current = my_list.<span class="pl-smi">head</span>;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="file-kontrolno-c-LC114" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> count = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="file-kontrolno-c-LC115" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="file-kontrolno-c-LC116" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span>( current != <span class="pl-c1">NULL</span>){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="file-kontrolno-c-LC117" class="blob-code blob-code-inner js-file-line">    current = current-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="file-kontrolno-c-LC118" class="blob-code blob-code-inner js-file-line">    count ++;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="file-kontrolno-c-LC119" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="file-kontrolno-c-LC120" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="file-kontrolno-c-LC121" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> count;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="file-kontrolno-c-LC122" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="file-kontrolno-c-LC123" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="file-kontrolno-c-LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>////////////</span></td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="file-kontrolno-c-LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">create</span>(<span class="pl-k">int</span> element){</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="file-kontrolno-c-LC126" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="file-kontrolno-c-LC127" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *new_el = (<span class="pl-k">struct</span> <span class="pl-c1">node_t</span>*)<span class="pl-c1">malloc</span>(<span class="pl-k">sizeof</span>(<span class="pl-k">struct</span> <span class="pl-c1">node_t</span>));</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="file-kontrolno-c-LC128" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="file-kontrolno-c-LC129" class="blob-code blob-code-inner js-file-line">  new_el-&gt;value = element;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="file-kontrolno-c-LC130" class="blob-code blob-code-inner js-file-line">  new_el-&gt;next = <span class="pl-c1">NULL</span>;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="file-kontrolno-c-LC131" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="file-kontrolno-c-LC132" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> new_el;</td>
      </tr>
      <tr>
        <td id="file-kontrolno-c-L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="file-kontrolno-c-LC133" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-list1-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/List1.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-list1-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              List1.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-list1-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-list1-c-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-list1-c-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-list1-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-list1-c-LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-list1-c-LC5" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-list1-c-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-list1-c-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-list1-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *list;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-list1-c-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> size;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-list1-c-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> capacity;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-list1-c-LC11" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-list1-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-list1-c-LC12" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-list1-c-LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">list_t</span> {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-list1-c-LC14" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *head;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-list1-c-LC15" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-list1-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-list1-c-LC16" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-list1-c-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-list1-c-LC18" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> value;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-list1-c-LC19" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *next;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-list1-c-LC20" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-list1-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-list1-c-LC21" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-list1-c-LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">push</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span>*, <span class="pl-k">int</span>);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-list1-c-LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">top</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span>);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-list1-c-LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">pop</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span>*);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-list1-c-LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">size</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span>);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-list1-c-LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> <span class="pl-en">stack_init</span>();</td>
      </tr>
      <tr>
        <td id="file-list1-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-list1-c-LC27" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-list1-c-LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>*, <span class="pl-k">int</span>);<span class="pl-c"><span class="pl-c">//</span>////////</span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-list1-c-LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert_after</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>*, <span class="pl-k">int</span>);<span class="pl-c"><span class="pl-c">//</span>/////////</span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-list1-c-LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_before</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>*);<span class="pl-c"><span class="pl-c">//</span>/////////</span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-list1-c-LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_after</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>*);<span class="pl-c"><span class="pl-c">//</span>/////////////</span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-list1-c-LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">create</span>(<span class="pl-k">int</span>);<span class="pl-c"><span class="pl-c">//</span>//////////////</span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-list1-c-LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">list_size</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-list1-c-LC34" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-list1-c-LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">are_ballanced</span>(<span class="pl-k">char</span> *str);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-list1-c-LC36" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-list1-c-LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>() {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-list1-c-LC38" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-list1-c-LC39" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">list_t</span> l;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-list1-c-LC40" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *n = <span class="pl-c1">create</span>(<span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-list1-c-LC41" class="blob-code blob-code-inner js-file-line">  l.<span class="pl-smi">head</span> = n;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-list1-c-LC42" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-list1-c-LC43" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, l.<span class="pl-smi">head</span>-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-list1-c-LC44" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-list1-c-LC45" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">insert_after</span>(&amp;l, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-list1-c-LC46" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">remove_after</span>(&amp;l);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-list1-c-LC47" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-list1-c-LC48" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, l.<span class="pl-smi">head</span>-&gt;value);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-list1-c-LC49" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>printf(&quot;%d\n&quot;, l.head-&gt;next-&gt;value);</span></td>
      </tr>
      <tr>
        <td id="file-list1-c-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-list1-c-LC50" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-list1-c-LC51" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-list1-c-LC52" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-list1-c-LC53" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-list1-c-LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *<span class="pl-en">create</span>(<span class="pl-k">int</span> value) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-list1-c-LC55" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *elem = (<span class="pl-k">struct</span> <span class="pl-c1">node_t</span>*)<span class="pl-c1">malloc</span>(<span class="pl-k">sizeof</span>(<span class="pl-k">struct</span> <span class="pl-c1">node_t</span>));</td>
      </tr>
      <tr>
        <td id="file-list1-c-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-list1-c-LC56" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-list1-c-LC57" class="blob-code blob-code-inner js-file-line">  elem-&gt;value = value;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-list1-c-LC58" class="blob-code blob-code-inner js-file-line">  elem-&gt;next = <span class="pl-c1">NULL</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-list1-c-LC59" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-list1-c-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-list1-c-LC60" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> elem;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-list1-c-LC61" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-list1-c-LC62" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-list1-c-LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">are_ballanced</span>(<span class="pl-k">char</span> *str) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-list1-c-LC64" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack = <span class="pl-c1">stack_init</span>();</td>
      </tr>
      <tr>
        <td id="file-list1-c-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-list1-c-LC65" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-list1-c-LC66" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">strlen</span>(str); i++) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-list1-c-LC67" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (str[i] == <span class="pl-s"><span class="pl-pds">&#39;</span>(<span class="pl-pds">&#39;</span></span> || str[i] == <span class="pl-s"><span class="pl-pds">&#39;</span>[<span class="pl-pds">&#39;</span></span> || str[i] == <span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-list1-c-LC68" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">push</span>(&amp;stack, str[i]); </td>
      </tr>
      <tr>
        <td id="file-list1-c-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-list1-c-LC69" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-list1-c-LC70" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-list1-c-LC71" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (str[i] == <span class="pl-s"><span class="pl-pds">&#39;</span>)<span class="pl-pds">&#39;</span></span> || str[i] == <span class="pl-s"><span class="pl-pds">&#39;</span>]<span class="pl-pds">&#39;</span></span> || str[i] == <span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-list1-c-LC72" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">size</span>(stack) == <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-list1-c-LC73" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-list1-c-LC74" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-list1-c-LC75" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> elem = <span class="pl-c1">top</span>(stack);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-list1-c-LC76" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-list1-c-LC77" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">0</span><span class="pl-c"><span class="pl-c">/*</span> is the same as the closing bracket<span class="pl-c">*/</span></span>) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-list1-c-LC78" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">pop</span>(&amp;stack);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-list1-c-LC79" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-list1-c-LC80" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-list1-c-LC81" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-list1-c-LC82" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-list1-c-LC83" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-list1-c-LC84" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-list1-c-LC85" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-list1-c-LC86" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-list1-c-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-list1-c-LC87" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">size</span>(stack) == <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-list1-c-LC88" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-list1-c-LC89" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-list1-c-LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">push</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *s, <span class="pl-k">int</span> elem) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-list1-c-LC91" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">insert</span>(s-&gt;list, elem);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-list1-c-LC92" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-list1-c-LC93" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-list1-c-LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">top</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> s) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="file-list1-c-LC95" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> s.<span class="pl-smi">list</span>-&gt;head-&gt;value;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="file-list1-c-LC96" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="file-list1-c-LC97" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="file-list1-c-LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">pop</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *s) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="file-list1-c-LC99" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">remove_before</span>(s-&gt;list);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="file-list1-c-LC100" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="file-list1-c-LC101" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="file-list1-c-LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">size</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> s) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="file-list1-c-LC103" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">list_size</span>(*(s.<span class="pl-smi">list</span>));</td>
      </tr>
      <tr>
        <td id="file-list1-c-L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="file-list1-c-LC104" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="file-list1-c-LC105" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="file-list1-c-LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">list_size</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> l) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="file-list1-c-LC107" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> count = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="file-list1-c-LC108" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *elem = l.<span class="pl-smi">head</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="file-list1-c-LC109" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span>(;elem-&gt;next != <span class="pl-c1">NULL</span>; count++, elem = elem-&gt;next) {}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="file-list1-c-LC110" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="file-list1-c-LC111" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> count;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="file-list1-c-LC112" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="file-list1-c-LC113" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="file-list1-c-LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_before</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *list) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="file-list1-c-LC115" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *removed = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="file-list1-c-LC116" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="file-list1-c-LC117" class="blob-code blob-code-inner js-file-line">  list-&gt;head = removed-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="file-list1-c-LC118" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="file-list1-c-LC119" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">free</span>(removed);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="file-list1-c-LC120" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="file-list1-c-LC121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="file-list1-c-LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">remove_after</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>* list) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="file-list1-c-LC123" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *last = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="file-list1-c-LC124" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-list1-c-L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="file-list1-c-LC125" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (last-&gt;next == <span class="pl-c1">NULL</span>) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="file-list1-c-LC126" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">remove_before</span>(list);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="file-list1-c-LC127" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="file-list1-c-LC128" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="file-list1-c-LC129" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="file-list1-c-LC130" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span>(last-&gt;next-&gt;next != <span class="pl-c1">NULL</span>) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="file-list1-c-LC131" class="blob-code blob-code-inner js-file-line">    last = last-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="file-list1-c-LC132" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="file-list1-c-LC133" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="file-list1-c-LC134" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">free</span>(last-&gt;next);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="file-list1-c-LC135" class="blob-code blob-code-inner js-file-line">  last-&gt;next = <span class="pl-c1">NULL</span>;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="file-list1-c-LC136" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="file-list1-c-LC137" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="file-list1-c-LC138" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="file-list1-c-LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert_after</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span>* list, <span class="pl-k">int</span> elem) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="file-list1-c-LC140" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *last = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="file-list1-c-LC141" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span>(last-&gt;next != <span class="pl-c1">NULL</span>) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="file-list1-c-LC142" class="blob-code blob-code-inner js-file-line">    last = last-&gt;next;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="file-list1-c-LC143" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-list1-c-L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="file-list1-c-LC144" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-list1-c-L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="file-list1-c-LC145" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *new_elem = <span class="pl-c1">create</span>(elem);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="file-list1-c-LC146" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-list1-c-L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="file-list1-c-LC147" class="blob-code blob-code-inner js-file-line">  last-&gt;next = new_elem;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="file-list1-c-LC148" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-list1-c-L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="file-list1-c-LC149" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="file-list1-c-LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">insert</span>(<span class="pl-k">struct</span> <span class="pl-c1">list_t</span> *list, <span class="pl-k">int</span> elem) {</td>
      </tr>
      <tr>
        <td id="file-list1-c-L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="file-list1-c-LC151" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">node_t</span> *new_elem = <span class="pl-c1">create</span>(elem);</td>
      </tr>
      <tr>
        <td id="file-list1-c-L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="file-list1-c-LC152" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-list1-c-L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="file-list1-c-LC153" class="blob-code blob-code-inner js-file-line">  new_elem-&gt;next = list-&gt;head;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="file-list1-c-LC154" class="blob-code blob-code-inner js-file-line">  list-&gt;head = new_elem;</td>
      </tr>
      <tr>
        <td id="file-list1-c-L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="file-list1-c-LC155" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-stacks-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/Stacks.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-stacks-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              Stacks.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-stacks-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-stacks-c-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-stacks-c-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-stacks-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-stacks-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-stacks-c-LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-stacks-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-stacks-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-stacks-c-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">stack_t</span>{</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-stacks-c-LC7" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-stacks-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> *arr;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-stacks-c-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> count;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-stacks-c-LC10" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> capacity;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-stacks-c-LC11" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-stacks-c-LC12" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-stacks-c-LC13" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-stacks-c-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> 1 </span></td>
      </tr>
      <tr>
        <td id="file-stacks-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-stacks-c-LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> <span class="pl-en">init</span>(<span class="pl-k">int</span> initial_capacity);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-stacks-c-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">destroy</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *st);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-stacks-c-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> 2</span></td>
      </tr>
      <tr>
        <td id="file-stacks-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-stacks-c-LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">push</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *stack, <span class="pl-k">int</span> elem);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-stacks-c-LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">top</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span>);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-stacks-c-LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">pop</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *stack);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-stacks-c-LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">size</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-stacks-c-LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>3</span></td>
      </tr>
      <tr>
        <td id="file-stacks-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-stacks-c-LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">is_full</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-stacks-c-LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">is_empty</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-stacks-c-LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">stack_resize</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *stack);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-stacks-c-LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> <span class="pl-en">stack_copy</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-stacks-c-LC27" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-stacks-c-LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-stacks-c-LC29" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-stacks-c-LC30" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> my_stack = <span class="pl-c1">init</span>(<span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-stacks-c-LC31" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-stacks-c-LC32" class="blob-code blob-code-inner js-file-line">  my_stack.<span class="pl-smi">arr</span>[<span class="pl-c1">0</span>] = <span class="pl-c1">3</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-stacks-c-LC33" class="blob-code blob-code-inner js-file-line">  my_stack.<span class="pl-smi">arr</span>[<span class="pl-c1">1</span>] = <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-stacks-c-LC34" class="blob-code blob-code-inner js-file-line">  my_stack.<span class="pl-smi">arr</span>[<span class="pl-c1">2</span>] = <span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-stacks-c-LC35" class="blob-code blob-code-inner js-file-line">  my_stack.<span class="pl-smi">arr</span>[<span class="pl-c1">3</span>] = <span class="pl-c1">6</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-stacks-c-LC36" class="blob-code blob-code-inner js-file-line">  my_stack.<span class="pl-smi">count</span> = <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-stacks-c-LC37" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-stacks-c-LC38" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; my_stack.<span class="pl-smi">count</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-stacks-c-LC39" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-stacks-c-LC40" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>El:<span class="pl-c1">%d</span> <span class="pl-pds">&quot;</span></span>, my_stack.<span class="pl-smi">arr</span>[i]);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-stacks-c-LC41" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-stacks-c-LC42" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-stacks-c-LC43" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-stacks-c-LC44" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-stacks-c-LC45" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-stacks-c-LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> <span class="pl-en">stack_copy</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-stacks-c-LC47" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> my_stack = <span class="pl-c1">init</span>(<span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-stacks-c-LC48" class="blob-code blob-code-inner js-file-line">  my_stack.<span class="pl-smi">count</span> = stack.<span class="pl-smi">count</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-stacks-c-LC49" class="blob-code blob-code-inner js-file-line">  my_stack.<span class="pl-smi">capacity</span> = stack.<span class="pl-smi">capacity</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-stacks-c-LC50" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-stacks-c-LC51" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; stack.<span class="pl-smi">count</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-stacks-c-LC52" class="blob-code blob-code-inner js-file-line">    my_stack.<span class="pl-smi">arr</span>[i] = stack.<span class="pl-smi">arr</span>[i];</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-stacks-c-LC53" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-stacks-c-LC54" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-stacks-c-LC55" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> my_stack;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-stacks-c-LC56" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-stacks-c-LC57" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-stacks-c-LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">stack_resize</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *stack){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-stacks-c-LC59" class="blob-code blob-code-inner js-file-line">  stack-&gt;arr = (<span class="pl-k">int</span>*)<span class="pl-c1">realloc</span>(stack-&gt;arr, (stack-&gt;capacity *<span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-stacks-c-LC60" class="blob-code blob-code-inner js-file-line">  stack-&gt;capacity *= <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-stacks-c-LC61" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-stacks-c-LC62" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-stacks-c-LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">is_empty</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-stacks-c-LC64" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-stacks-c-LC65" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (stack.<span class="pl-smi">count</span> == <span class="pl-c1">0</span>){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-stacks-c-LC66" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-stacks-c-LC67" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-stacks-c-LC68" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-stacks-c-LC69" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-stacks-c-LC70" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-stacks-c-LC71" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-stacks-c-LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">is_full</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-stacks-c-LC73" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(stack.<span class="pl-smi">count</span> &gt;= stack.<span class="pl-smi">capacity</span>){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-stacks-c-LC74" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-stacks-c-LC75" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-stacks-c-LC76" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-stacks-c-LC77" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-stacks-c-LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">size</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> stack){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-stacks-c-LC79" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> stack.<span class="pl-smi">count</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-stacks-c-LC80" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-stacks-c-LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">pop</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *stack){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-stacks-c-LC82" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-stacks-c-LC83" class="blob-code blob-code-inner js-file-line">  stack-&gt;count --;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-stacks-c-LC84" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>((stack-&gt;capacity - stack-&gt;count) &gt; <span class="pl-c1">10</span>){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-stacks-c-LC85" class="blob-code blob-code-inner js-file-line">    stack-&gt;arr = (<span class="pl-k">int</span>*)<span class="pl-c1">realloc</span>(stack-&gt;arr, (stack-&gt;capacity + <span class="pl-c1">10</span>));</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-stacks-c-LC86" class="blob-code blob-code-inner js-file-line">    stack-&gt;capacity -= <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-stacks-c-LC87" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-stacks-c-LC88" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-stacks-c-LC89" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-stacks-c-LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">top</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> st){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-stacks-c-LC91" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-stacks-c-LC92" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> st.<span class="pl-smi">arr</span>[st.<span class="pl-smi">count</span> - <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-stacks-c-LC93" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-stacks-c-LC94" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="file-stacks-c-LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">push</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *stack, <span class="pl-k">int</span> elem){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="file-stacks-c-LC96" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="file-stacks-c-LC97" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(<span class="pl-c1">is_full</span>(*stack)){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="file-stacks-c-LC98" class="blob-code blob-code-inner js-file-line">    stack-&gt;arr = (<span class="pl-k">int</span>*)<span class="pl-c1">realloc</span>(stack-&gt;arr, (stack-&gt;capacity + <span class="pl-c1">10</span>));</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="file-stacks-c-LC99" class="blob-code blob-code-inner js-file-line">    stack-&gt;capacity += <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="file-stacks-c-LC100" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="file-stacks-c-LC101" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="file-stacks-c-LC102" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = stack-&gt;count; i &gt;= <span class="pl-c1">0</span>; i--){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="file-stacks-c-LC103" class="blob-code blob-code-inner js-file-line">    stack-&gt;arr[i + <span class="pl-c1">1</span>] = stack-&gt;arr[i];</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="file-stacks-c-LC104" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="file-stacks-c-LC105" class="blob-code blob-code-inner js-file-line">  stack-&gt;arr[<span class="pl-c1">0</span>] = elem;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="file-stacks-c-LC106" class="blob-code blob-code-inner js-file-line">  stack-&gt;count += <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="file-stacks-c-LC107" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="file-stacks-c-LC108" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="file-stacks-c-LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">destroy</span>(<span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> *st){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="file-stacks-c-LC110" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="file-stacks-c-LC111" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">free</span>(st-&gt;arr);</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="file-stacks-c-LC112" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="file-stacks-c-LC113" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="file-stacks-c-LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> <span class="pl-en">init</span>(<span class="pl-k">int</span> initial_capacity){</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="file-stacks-c-LC115" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="file-stacks-c-LC116" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">stack_t</span> new_stack;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="file-stacks-c-LC117" class="blob-code blob-code-inner js-file-line">  new_stack.<span class="pl-smi">capacity</span> = initial_capacity;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="file-stacks-c-LC118" class="blob-code blob-code-inner js-file-line">  new_stack.<span class="pl-smi">count</span> = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="file-stacks-c-LC119" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="file-stacks-c-LC120" class="blob-code blob-code-inner js-file-line">  new_stack.<span class="pl-smi">arr</span> = (<span class="pl-k">int</span>*)<span class="pl-c1">malloc</span>(new_stack.<span class="pl-smi">capacity</span> * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>));</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="file-stacks-c-LC121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="file-stacks-c-LC122" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> new_stack;</td>
      </tr>
      <tr>
        <td id="file-stacks-c-L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="file-stacks-c-LC123" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-task-two-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/task-two.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-task-two-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              task-two.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-task-two-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-task-two-c-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-task-two-c-LC2" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-task-two-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-task-two-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-task-two-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-task-two-c-LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-task-two-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-task-two-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-task-two-c-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">note_t</span>{</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-task-two-c-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">char</span> text[<span class="pl-c1">20</span>];</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-task-two-c-LC8" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-task-two-c-LC9" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-task-two-c-LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">board_t</span>{</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-task-two-c-LC11" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">note_t</span> notes[<span class="pl-c1">10</span>];</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-task-two-c-LC12" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> count;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-task-two-c-LC13" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-task-two-c-LC14" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-task-two-c-LC15" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-task-two-c-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">board_t</span> <span class="pl-en">copy_board</span>(<span class="pl-k">struct</span> <span class="pl-c1">board_t</span> reference);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-task-two-c-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">filter_board_notes</span>(<span class="pl-k">struct</span> <span class="pl-c1">board_t</span>*);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-task-two-c-LC18" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-task-two-c-LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-task-two-c-LC20" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-task-two-c-LC21" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-task-two-c-LC22" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">board_t</span> original;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-task-two-c-LC23" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">strcpy</span>(original.<span class="pl-smi">notes</span>[<span class="pl-c1">1</span>].<span class="pl-smi">text</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>dd<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-task-two-c-LC24" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">strcpy</span>(original.<span class="pl-smi">notes</span>[<span class="pl-c1">2</span>].<span class="pl-smi">text</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>123456789061234<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-task-two-c-LC25" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;%d\n&quot;, strlen(original.notes[2].text) );</span></td>
      </tr>
      <tr>
        <td id="file-task-two-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-task-two-c-LC26" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">strcpy</span>(original.<span class="pl-smi">notes</span>[<span class="pl-c1">0</span>].<span class="pl-smi">text</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>ddee<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-task-two-c-LC27" class="blob-code blob-code-inner js-file-line">  original.<span class="pl-smi">count</span> = <span class="pl-c1">3</span>;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-task-two-c-LC28" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">board_t</span> copied = <span class="pl-c1">copy_board</span>(original);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-task-two-c-LC29" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-task-two-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-task-two-c-LC30" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, copied.<span class="pl-smi">notes</span>[<span class="pl-c1">2</span>].<span class="pl-smi">text</span>);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-task-two-c-LC31" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">filter_board_notes</span>(&amp;copied);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-task-two-c-LC32" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-task-two-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-task-two-c-LC33" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; copied.<span class="pl-smi">count</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-task-two-c-LC34" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, copied.<span class="pl-smi">notes</span>[i].<span class="pl-smi">text</span>);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-task-two-c-LC35" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-task-two-c-LC36" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-task-two-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-task-two-c-LC37" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-task-two-c-LC38" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-task-two-c-LC39" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-task-two-c-LC40" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-task-two-c-LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">filter_board_notes</span>(<span class="pl-k">struct</span> <span class="pl-c1">board_t</span>* reference){</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-task-two-c-LC42" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> j = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-task-two-c-LC43" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; reference-&gt;count ; ++i){</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-task-two-c-LC44" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(<span class="pl-c1">strlen</span>(reference-&gt;notes[i].<span class="pl-smi">text</span>) &gt;= <span class="pl-c1">5</span> &amp;&amp; <span class="pl-c1">strlen</span>(reference-&gt;notes[i].<span class="pl-smi">text</span>) &lt;= <span class="pl-c1">15</span>){</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-task-two-c-LC45" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">strcpy</span>(reference-&gt;notes[j].<span class="pl-smi">text</span>, reference-&gt;notes[i].<span class="pl-smi">text</span>);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-task-two-c-LC46" class="blob-code blob-code-inner js-file-line">      j++;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-task-two-c-LC47" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-task-two-c-LC48" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-task-two-c-LC49" class="blob-code blob-code-inner js-file-line">  reference-&gt;count = j;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-task-two-c-LC50" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-task-two-c-LC51" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-task-two-c-LC52" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-task-two-c-LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">board_t</span> <span class="pl-en">copy_board</span>(<span class="pl-k">struct</span> <span class="pl-c1">board_t</span> reference){</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-task-two-c-LC54" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">board_t</span> copied;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-task-two-c-LC55" class="blob-code blob-code-inner js-file-line">  copied.<span class="pl-smi">count</span> = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-task-two-c-LC56" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-task-two-c-LC57" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; reference.<span class="pl-smi">count</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-task-two-c-LC58" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">strcpy</span>(copied.<span class="pl-smi">notes</span>[i].<span class="pl-smi">text</span>, reference.<span class="pl-smi">notes</span>[i].<span class="pl-smi">text</span>);</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-task-two-c-LC59" class="blob-code blob-code-inner js-file-line">    copied.<span class="pl-smi">count</span> ++;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-task-two-c-LC60" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-task-two-c-LC61" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-task-two-c-LC62" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> copied;</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-task-two-c-LC63" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-task-two-c-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-task-two-c-LC64" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-tv-task-three-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/tv-task-three.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-tv-task-three-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              tv-task-three.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-tv-task-three-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-tv-task-three-c-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-tv-task-three-c-LC2" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-tv-task-three-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-tv-task-three-c-LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-tv-task-three-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-tv-task-three-c-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-tv-task-three-c-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">channel_t</span>{</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-tv-task-three-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> id;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-tv-task-three-c-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">char</span> name[<span class="pl-c1">40</span>];</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-tv-task-three-c-LC10" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-tv-task-three-c-LC11" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-tv-task-three-c-LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">tv_t</span>{</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-tv-task-three-c-LC13" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">channel_t</span> channels[<span class="pl-c1">10</span>];</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-tv-task-three-c-LC14" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> count;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-tv-task-three-c-LC15" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-tv-task-three-c-LC16" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-tv-task-three-c-LC17" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-tv-task-three-c-LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">tv_t</span> <span class="pl-en">sort_by_id</span>(<span class="pl-k">struct</span> <span class="pl-c1">tv_t</span>);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-tv-task-three-c-LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">update_or_create</span>(<span class="pl-k">struct</span> <span class="pl-c1">tv_t</span>*, <span class="pl-k">int</span> id, <span class="pl-k">char</span> name[<span class="pl-c1">40</span>]);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-tv-task-three-c-LC20" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-tv-task-three-c-LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-tv-task-three-c-LC22" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-tv-task-three-c-LC23" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-tv-task-three-c-LC24" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-tv-task-three-c-LC25" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">tv_t</span> original;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-tv-task-three-c-LC26" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">strcpy</span>(original.<span class="pl-smi">channels</span>[<span class="pl-c1">0</span>].<span class="pl-smi">name</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>SPN<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-tv-task-three-c-LC27" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">strcpy</span>(original.<span class="pl-smi">channels</span>[<span class="pl-c1">1</span>].<span class="pl-smi">name</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Animals<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-tv-task-three-c-LC28" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">strcpy</span>(original.<span class="pl-smi">channels</span>[<span class="pl-c1">2</span>].<span class="pl-smi">name</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>MrRobot<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-tv-task-three-c-LC29" class="blob-code blob-code-inner js-file-line">  original.<span class="pl-smi">channels</span>[<span class="pl-c1">0</span>].<span class="pl-smi">id</span> = <span class="pl-c1">8</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-tv-task-three-c-LC30" class="blob-code blob-code-inner js-file-line">  original.<span class="pl-smi">channels</span>[<span class="pl-c1">1</span>].<span class="pl-smi">id</span> = <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-tv-task-three-c-LC31" class="blob-code blob-code-inner js-file-line">  original.<span class="pl-smi">channels</span>[<span class="pl-c1">2</span>].<span class="pl-smi">id</span> = <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-tv-task-three-c-LC32" class="blob-code blob-code-inner js-file-line">  original.<span class="pl-smi">count</span> = <span class="pl-c1">3</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-tv-task-three-c-LC33" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-tv-task-three-c-LC34" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">tv_t</span> sorted = <span class="pl-c1">sort_by_id</span>(original);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-tv-task-three-c-LC35" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;Opa %s\n&quot;, sorted.channels[2].name);</span></td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-tv-task-three-c-LC36" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-tv-task-three-c-LC37" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">char</span> new_name[<span class="pl-c1">20</span>];</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-tv-task-three-c-LC38" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">strcpy</span>(new_name, <span class="pl-s"><span class="pl-pds">&quot;</span>Vampire<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-tv-task-three-c-LC39" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-tv-task-three-c-LC40" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">update_or_create</span>(&amp;original, <span class="pl-c1">7</span>, new_name);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-tv-task-three-c-LC41" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;%d\n&quot;, original.count );</span></td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-tv-task-three-c-LC42" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-tv-task-three-c-LC43" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; original.<span class="pl-smi">count</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-tv-task-three-c-LC44" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>I vytre <span class="pl-c1">%s</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, original.<span class="pl-smi">channels</span>[i].<span class="pl-smi">name</span>);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-tv-task-three-c-LC45" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-tv-task-three-c-LC46" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-tv-task-three-c-LC47" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-tv-task-three-c-LC48" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-tv-task-three-c-LC49" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-tv-task-three-c-LC50" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">tv_t</span> <span class="pl-en">sort_by_id</span>(<span class="pl-k">struct</span> <span class="pl-c1">tv_t</span> reference){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-tv-task-three-c-LC51" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-tv-task-three-c-LC52" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">struct</span> <span class="pl-c1">channel_t</span> temp;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-tv-task-three-c-LC53" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-tv-task-three-c-LC54" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; reference.<span class="pl-smi">count</span> ; ++i){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-tv-task-three-c-LC55" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">int</span> j = i; j &lt; reference.<span class="pl-smi">count</span>; ++j){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-tv-task-three-c-LC56" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>(reference.<span class="pl-smi">channels</span>[j].<span class="pl-smi">id</span> &gt; reference.<span class="pl-smi">channels</span>[j+<span class="pl-c1">1</span>].<span class="pl-smi">id</span>){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-tv-task-three-c-LC57" class="blob-code blob-code-inner js-file-line">          temp = reference.<span class="pl-smi">channels</span>[j+<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-tv-task-three-c-LC58" class="blob-code blob-code-inner js-file-line">          reference.<span class="pl-smi">channels</span>[j+<span class="pl-c1">1</span>] = reference.<span class="pl-smi">channels</span>[j];</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-tv-task-three-c-LC59" class="blob-code blob-code-inner js-file-line">          reference.<span class="pl-smi">channels</span>[j] = temp;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-tv-task-three-c-LC60" class="blob-code blob-code-inner js-file-line">         }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-tv-task-three-c-LC61" class="blob-code blob-code-inner js-file-line">      }      </td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-tv-task-three-c-LC62" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-tv-task-three-c-LC63" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-tv-task-three-c-LC64" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> reference;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-tv-task-three-c-LC65" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-tv-task-three-c-LC66" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-tv-task-three-c-LC67" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-tv-task-three-c-LC68" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">update_or_create</span>(<span class="pl-k">struct</span> <span class="pl-c1">tv_t</span> *reference, <span class="pl-k">int</span> id, <span class="pl-k">char</span> name[<span class="pl-c1">40</span>]){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-tv-task-three-c-LC69" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> is_empty = <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-tv-task-three-c-LC70" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; reference-&gt;count; ++i){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-tv-task-three-c-LC71" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (reference-&gt;channels[i].<span class="pl-smi">id</span> == id){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-tv-task-three-c-LC72" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">strcpy</span>(reference-&gt;channels[i].<span class="pl-smi">name</span>, name);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-tv-task-three-c-LC73" class="blob-code blob-code-inner js-file-line">          is_empty = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-tv-task-three-c-LC74" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-tv-task-three-c-LC75" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-tv-task-three-c-LC76" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-tv-task-three-c-LC77" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span>(is_empty == <span class="pl-c1">1</span>){</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-tv-task-three-c-LC78" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">strcpy</span>(reference-&gt;channels[reference-&gt;count].<span class="pl-smi">name</span>, name);</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-tv-task-three-c-LC79" class="blob-code blob-code-inner js-file-line">        reference-&gt;channels[reference-&gt;count].<span class="pl-smi">id</span> = id;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-tv-task-three-c-LC80" class="blob-code blob-code-inner js-file-line">        reference-&gt;count ++;</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-tv-task-three-c-LC81" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-tv-task-three-c-LC82" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-tv-task-three-c-LC83" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-tv-task-three-c-LC84" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-tv-task-three-c-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-tv-task-three-c-LC85" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-zadacha-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/zadacha.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-zadacha-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              zadacha.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-zadacha-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-zadacha-c-LC1" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-zadacha-c-LC2" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-zadacha-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-zadacha-c-LC4" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-zadacha-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-zadacha-c-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-zadacha-c-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">calendar_t</span>{</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-zadacha-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> events_count[<span class="pl-c1">52</span>];</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-zadacha-c-LC9" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-zadacha-c-LC10" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-zadacha-c-LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-zadacha-c-LC12" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-zadacha-c-LC13" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-c1">calendar_t</span> my_cal;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-zadacha-c-LC14" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>, j = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">52</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-zadacha-c-LC15" class="blob-code blob-code-inner js-file-line">    my_cal.<span class="pl-smi">events_count</span>[i] = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-zadacha-c-LC16" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-zadacha-c-LC17" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-zadacha-c-LC18" class="blob-code blob-code-inner js-file-line">  my_cal.<span class="pl-smi">events_count</span>[<span class="pl-c1">2</span>] = <span class="pl-c1">76</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-zadacha-c-LC19" class="blob-code blob-code-inner js-file-line">  my_cal.<span class="pl-smi">events_count</span>[<span class="pl-c1">3</span>] = <span class="pl-c1">76</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-zadacha-c-LC20" class="blob-code blob-code-inner js-file-line">  my_cal.<span class="pl-smi">events_count</span>[<span class="pl-c1">40</span>] = <span class="pl-c1">76</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-zadacha-c-LC21" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-zadacha-c-LC22" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> *all_events;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-zadacha-c-LC23" class="blob-code blob-code-inner js-file-line">  all_events = <span class="pl-c1">events_per_month</span>(my_cal);</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-zadacha-c-LC24" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">13</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-zadacha-c-LC25" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%d</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, all_events[i]);</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-zadacha-c-LC26" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-zadacha-c-LC27" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-zadacha-c-LC28" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-zadacha-c-LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span>* <span class="pl-en">events_per_month</span>(<span class="pl-k">struct</span> <span class="pl-c1">calendar_t</span> my_calendar){</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-zadacha-c-LC30" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-zadacha-c-LC31" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> *months = (<span class="pl-k">int</span>*)<span class="pl-c1">malloc</span>(<span class="pl-c1">13</span> * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>));</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-zadacha-c-LC32" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-zadacha-c-LC33" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">int</span> i = <span class="pl-c1">0</span>, j = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">52</span>; ++i){</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-zadacha-c-LC34" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> printf(&quot;ppppooo %d\n&quot;,my_calendar.events_count[i] );</span></td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-zadacha-c-LC35" class="blob-code blob-code-inner js-file-line">    months[j] += my_calendar.<span class="pl-smi">events_count</span>[i];</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-zadacha-c-LC36" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(i%<span class="pl-c1">4</span> == <span class="pl-c1">0</span>){</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-zadacha-c-LC37" class="blob-code blob-code-inner js-file-line">      j++;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-zadacha-c-LC38" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-zadacha-c-LC39" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-zadacha-c-LC40" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-zadacha-c-LC41" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> months;</td>
      </tr>
      <tr>
        <td id="file-zadacha-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-zadacha-c-LC42" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-zadacha3dynamic2-c" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/raw/852d63d6a46d6b683c6add74fdbcfc73f2e41312/zadacha3dynamic2.c" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg aria-hidden="true" class="octicon octicon-gist" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-zadacha3dynamic2-c">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              zadacha3dynamic2.c
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-zadacha3dynamic2-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-zadacha3dynamic2-c-LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-zadacha3dynamic2-c-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-zadacha3dynamic2-c-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-zadacha3dynamic2-c-LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-zadacha3dynamic2-c-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-zadacha3dynamic2-c-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">vector_t</span>{</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-zadacha3dynamic2-c-LC7" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> now_size;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-zadacha3dynamic2-c-LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> now_count;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-zadacha3dynamic2-c-LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> *arr;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-zadacha3dynamic2-c-LC10" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-zadacha3dynamic2-c-LC11" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-zadacha3dynamic2-c-LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> <span class="pl-en">init</span>();</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-zadacha3dynamic2-c-LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">add_last</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> *vector, <span class="pl-k">int</span> item);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-zadacha3dynamic2-c-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">last</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span>);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-zadacha3dynamic2-c-LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">pop</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span>*);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-zadacha3dynamic2-c-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">empty</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span>);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-zadacha3dynamic2-c-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">full</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span>);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-zadacha3dynamic2-c-LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">destroy</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span>*);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-zadacha3dynamic2-c-LC19" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-zadacha3dynamic2-c-LC20" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-zadacha3dynamic2-c-LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(){ </td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-zadacha3dynamic2-c-LC22" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-zadacha3dynamic2-c-LC23" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">vector_t</span> MyVec = <span class="pl-c1">init</span>();</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-zadacha3dynamic2-c-LC24" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">add_last</span>(&amp;MyVec, <span class="pl-c1">6</span>);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-zadacha3dynamic2-c-LC25" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">add_last</span>(&amp;MyVec, <span class="pl-c1">8</span>);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-zadacha3dynamic2-c-LC26" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">add_last</span>(&amp;MyVec, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-zadacha3dynamic2-c-LC27" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-zadacha3dynamic2-c-LC28" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> last_save = <span class="pl-c1">pop</span>(&amp;MyVec);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-zadacha3dynamic2-c-LC29" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> destroy(&amp;MyVec);</span></td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-zadacha3dynamic2-c-LC30" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> pulno = <span class="pl-c1">full</span>(MyVec);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-zadacha3dynamic2-c-LC31" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-zadacha3dynamic2-c-LC32" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;%d\n&quot;, last(MyVec));</span></td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-zadacha3dynamic2-c-LC33" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;FULL: %d\n&quot;, pulno);</span></td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-zadacha3dynamic2-c-LC34" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> printf(&quot;%d\n&quot;, MyVec.now_size);</span></td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-zadacha3dynamic2-c-LC35" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-zadacha3dynamic2-c-LC36" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-zadacha3dynamic2-c-LC37" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-zadacha3dynamic2-c-LC38" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-zadacha3dynamic2-c-LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">destroy</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> *vector){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-zadacha3dynamic2-c-LC40" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(vector);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-zadacha3dynamic2-c-LC41" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-zadacha3dynamic2-c-LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">full</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> vector){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-zadacha3dynamic2-c-LC43" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-zadacha3dynamic2-c-LC44" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(vector.<span class="pl-smi">now_size</span> == vector.<span class="pl-smi">now_count</span>){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-zadacha3dynamic2-c-LC45" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-zadacha3dynamic2-c-LC46" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-zadacha3dynamic2-c-LC47" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-zadacha3dynamic2-c-LC48" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-zadacha3dynamic2-c-LC49" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-zadacha3dynamic2-c-LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">pop</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> *vector){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-zadacha3dynamic2-c-LC51" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-zadacha3dynamic2-c-LC52" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> vyrni = vector-&gt;arr[vector-&gt;now_count - <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-zadacha3dynamic2-c-LC53" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-zadacha3dynamic2-c-LC54" class="blob-code blob-code-inner js-file-line">  vector-&gt;arr = (<span class="pl-k">int</span>*)<span class="pl-c1">realloc</span>(vector-&gt;arr, vector-&gt;now_size);</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-zadacha3dynamic2-c-LC55" class="blob-code blob-code-inner js-file-line">  vector-&gt;now_count --;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-zadacha3dynamic2-c-LC56" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> vyrni;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-zadacha3dynamic2-c-LC57" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-zadacha3dynamic2-c-LC58" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-zadacha3dynamic2-c-LC59" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-zadacha3dynamic2-c-LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">add_last</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> *vector, <span class="pl-k">int</span> item){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-zadacha3dynamic2-c-LC61" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-zadacha3dynamic2-c-LC62" class="blob-code blob-code-inner js-file-line">  vector-&gt;arr[vector-&gt;now_count] = item;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-zadacha3dynamic2-c-LC63" class="blob-code blob-code-inner js-file-line">  vector-&gt;now_count ++;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-zadacha3dynamic2-c-LC64" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-zadacha3dynamic2-c-LC65" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(vector-&gt;now_size &lt; vector-&gt;now_count){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-zadacha3dynamic2-c-LC66" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-zadacha3dynamic2-c-LC67" class="blob-code blob-code-inner js-file-line">    vector-&gt;arr = (<span class="pl-k">int</span>*)<span class="pl-c1">realloc</span>(vector-&gt;arr, (vector-&gt;now_size + <span class="pl-c1">10</span>) * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>));</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-zadacha3dynamic2-c-LC68" class="blob-code blob-code-inner js-file-line">    vector-&gt;now_size += <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-zadacha3dynamic2-c-LC69" class="blob-code blob-code-inner js-file-line">  } </td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-zadacha3dynamic2-c-LC70" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-zadacha3dynamic2-c-LC71" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-zadacha3dynamic2-c-LC72" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-zadacha3dynamic2-c-LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> <span class="pl-en">init</span>(){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-zadacha3dynamic2-c-LC74" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-zadacha3dynamic2-c-LC75" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">vector_t</span> MyVector;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-zadacha3dynamic2-c-LC76" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-zadacha3dynamic2-c-LC77" class="blob-code blob-code-inner js-file-line">  MyVector.<span class="pl-smi">now_size</span> = <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-zadacha3dynamic2-c-LC78" class="blob-code blob-code-inner js-file-line">  MyVector.<span class="pl-smi">arr</span> = (<span class="pl-k">int</span>*)<span class="pl-c1">malloc</span>(<span class="pl-c1">10</span> * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>));</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-zadacha3dynamic2-c-LC79" class="blob-code blob-code-inner js-file-line">  MyVector.<span class="pl-smi">now_count</span> = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-zadacha3dynamic2-c-LC80" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-zadacha3dynamic2-c-LC81" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> MyVector;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-zadacha3dynamic2-c-LC82" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-zadacha3dynamic2-c-LC83" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-zadacha3dynamic2-c-LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">empty</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> vector){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-zadacha3dynamic2-c-LC85" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(vector.<span class="pl-smi">now_count</span> != <span class="pl-c1">0</span>){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-zadacha3dynamic2-c-LC86" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-zadacha3dynamic2-c-LC87" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-zadacha3dynamic2-c-LC88" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-zadacha3dynamic2-c-LC89" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-zadacha3dynamic2-c-LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">last</span>(<span class="pl-k">struct</span> <span class="pl-c1">vector_t</span> vector){</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-zadacha3dynamic2-c-LC91" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-zadacha3dynamic2-c-LC92" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> vector.<span class="pl-smi">arr</span>[vector.<span class="pl-smi">now_count</span> - <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-zadacha3dynamic2-c-LC93" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-zadacha3dynamic2-c-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-zadacha3dynamic2-c-LC94" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</table>


  </div>

  </div>
  
</div>


    <a name="comments"></a>
    <div class="discussion-timeline gist-discussion-timeline js-quote-selection-container ">
      <div class="js-discussion js-socket-channel" data-channel="marked-as-read:gist:49194852">
        



<!-- Rendered timeline since 2017-06-14 14:43:31 -->
<div id="partial-timeline-marker"
      class="js-timeline-marker js-updatable-content"
      data-url="/I-Mircheva/d81755abe14046e4f6cee70e0e41fb3f/show_partial?partial=gist%2Ftimeline_marker&amp;since=1497476611"
      data-last-modified="Wed, 14 Jun 2017 21:43:31 GMT"
      >
</div>


        <div class="discussion-timeline-actions">
            <div class="flash flash-warn mt-3">
    <a href="/join?source=comment-gist" class="btn btn-primary" rel="nofollow">Sign up for free</a>
    <strong>to join this conversation on GitHub</strong>.
    Already have an account?
    <a href="/login?return_to=https%3A%2F%2Fgist.github.com%2FI-Mircheva%2Fd81755abe14046e4f6cee70e0e41fb3f" rel="nofollow">Sign in to comment</a>
</div>

        </div>
      </div>
    </div>
</div>
  </div>

  <div class="modal-backdrop js-touch-events"></div>
</div><!-- /.container -->

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between py-6 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2017 <span title="0.28185s from unicorn-1551452792-54p4q">GitHub</span>, Inc.</li>
        <li class="mr-3"><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li class="mr-3"><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>

    <a href="https://github.com" aria-label="Homepage" class="footer-octicon" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/compat-91f98c37fc84eac24836eec2567e9912742094369a04c4eba6e3cd1fa18902d9.js"></script>
    <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-db06d5e5cc508b59a3d6d16c22bb523005ca9fc0c513cbb039b32a25204b6be7.js"></script>
    
    <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-47da5701cb3bc75d0588f91b0aa0407e3d3f8c7f1d628aa9a3c830544f15bf20.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

